[
    {
        "ep_type": "module_entry",
        "start_addr": "0x401000",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "d7b89717ffed4033fa12556b967671e3f393f547b8b18a0787de37d13955ba32",
        "apis": [
            {
                "pc": "0x43ba76",
                "api_name": "KERNEL32.GetProcessHeap",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x43ba83",
                "api_name": "ole32.CoInitialize",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x10"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4630"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4640"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4650"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4660"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4670"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4680"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4690"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x46a0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x46c0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x46d0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x46e0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0xc"
                ],
                "ret_val": "0x46f0"
            },
            {
                "pc": "0x43bba3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x8"
                ],
                "ret_val": "0x4700"
            },
            {
                "pc": "0x43cb54",
                "api_name": "KERNEL32.MultiByteToWideChar",
                "args": [
                    "0x0",
                    "0x0",
                    "WScript.Shell",
                    "0xffffffff",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xe"
            },
            {
                "pc": "0x43cb68",
                "api_name": "MSVCRT.??2@YAPAXI@Z",
                "args": [],
                "ret_val": null
            }
        ],
        "ret_val": "0x1c",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf064",
            "address": "0xfeedf064",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211f2c",
                "ebp": "0xfeedf064",
                "eip": "0xfeedf064",
                "esi": "0x0000000e",
                "edi": "0x0000001c",
                "eax": "0x0000001c",
                "ebx": "0x00444771",
                "ecx": "0x00000008",
                "edx": "0x00444771"
            },
            "stack": [
                "sp+0x00: 0x0043cb78 -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x04: 0x00000000",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x00444771 -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x10: 0xffffffff",
                "sp+0x14: 0x0000001c",
                "sp+0x18: 0x0000000e",
                "sp+0x1c: 0x00004700 -> api.heap.HeapAlloc.0x4700",
                "sp+0x20: 0x0044323f -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x0000091c",
                "sp+0x2c: 0x0043d4b5 -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x30: 0x00444771 -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x34: 0x000046e8 -> api.heap.HeapAlloc.0x46e0",
                "sp+0x38: 0x0044323f -> emu.module.bb37fc7178c7d0485c5a5a2a6034e92f469df498071f6d6d004e3b894e58ac28.0x400000",
                "sp+0x3c: 0x01211fcc -> emu.stack.0x1200000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2771, in MultiByteToWideChar\n    self.mem_write(lpWideCharStr, ws)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]