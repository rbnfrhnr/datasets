[
    {
        "ep_type": "module_entry",
        "start_addr": "0x40fc41",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "c44ff48de1587f259d407fdf97eed1ef874237ce872a78bd1c621f5cc10eeda7",
        "apis": [
            {
                "pc": "0x40fb01",
                "api_name": "KERNEL32.HeapSetInformation",
                "args": [
                    "0x0",
                    "0x1",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4128ec",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x0",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x41229a",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "KERNEL32.DLL"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x4122b8",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "FlsAlloc"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x4122c5",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "FlsGetValue"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x4122d2",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "FlsSetValue"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x4122df",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "FlsFree"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x412333",
                "api_name": "KERNEL32.TlsAlloc",
                "args": [],
                "ret_val": "0x0"
            },
            {
                "pc": "0x41234a",
                "api_name": "KERNEL32.TlsSetValue",
                "args": [
                    "0x0",
                    "0xfeee0001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411f9b",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411d33",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0x411cef"
                ],
                "ret_val": "0x411cf0"
            },
            {
                "pc": "0x412365",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0xfeee0000"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x412372",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0xfeee0001"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x41237f",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0xfeee0002"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x41238c",
                "api_name": "KERNEL32.EncodePointer",
                "args": [
                    "0xfeee0003"
                ],
                "ret_val": "0xfeee0004"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425060",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425078",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425090",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x4250a8",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x4250c0",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x4250d8",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x4250f0",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425108",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425120",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425138",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425150",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425168",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425180",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411b70",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x425198",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4123ad",
                "api_name": "KERNEL32.DecodePointer",
                "args": [
                    "0xfeee0001"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x4123af",
                "api_name": "kernel32.FlsAlloc",
                "args": [
                    "0x41215d"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x418cb9",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x214"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x4123dc",
                "api_name": "KERNEL32.DecodePointer",
                "args": [
                    "0xfeee0003"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x4123de",
                "api_name": "kernel32.FlsSetValue",
                "args": [
                    "0x0",
                    "0x4610"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x41202d",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "KERNEL32.DLL"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x411cec",
                "api_name": "KERNEL32.EnterCriticalSection",
                "args": [
                    "0x425138"
                ],
                "ret_val": null
            },
            {
                "pc": "0x41206e",
                "api_name": "KERNEL32.InterlockedIncrement",
                "args": [
                    "0x423f40"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x411bf8",
                "api_name": "KERNEL32.LeaveCriticalSection",
                "args": [
                    "0x425138"
                ],
                "ret_val": null
            },
            {
                "pc": "0x411cec",
                "api_name": "KERNEL32.EnterCriticalSection",
                "args": [
                    "0x425120"
                ],
                "ret_val": null
            },
            {
                "pc": "0x412ff3",
                "api_name": "KERNEL32.InterlockedIncrement",
                "args": [
                    "0x4245d0"
                ],
                "ret_val": "0x3"
            },
            {
                "pc": "0x413069",
                "api_name": "KERNEL32.InterlockedIncrement",
                "args": [
                    "0x42451c"
                ],
                "ret_val": "0x2"
            },
            {
                "pc": "0x411bf8",
                "api_name": "KERNEL32.LeaveCriticalSection",
                "args": [
                    "0x425120"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4123f2",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x7e78"
            },
            {
                "pc": "0x4113f0",
                "api_name": "KERNEL32.GetStartupInfoW",
                "args": [
                    "0x1211f5c"
                ],
                "ret_val": null
            },
            {
                "pc": "0x418cb9",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x800"
                ],
                "ret_val": "0x7000"
            },
            {
                "pc": "0x4115ad",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x4115bf",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4115ed",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x700c",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4115ad",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x4115bf",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4115ed",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x704c",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4115ad",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x4115bf",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4115ed",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x708c",
                    "0xfa0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x411616",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x40fb8b",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x7810"
            },
            {
                "pc": "0x416781",
                "api_name": "KERNEL32.GetEnvironmentStringsW",
                "args": [],
                "ret_val": "0x7830"
            },
            {
                "pc": "0x4167bb",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x7830",
                    "0xcd",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xcd"
            },
            {
                "pc": "0x40ca89",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0xcd"
                ],
                "ret_val": "0x79d0"
            },
            {
                "pc": "0x4167de",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x7830",
                    "0xcd",
                    "0x79d0",
                    "0xcd",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xcd"
            },
            {
                "pc": "0x4167f5",
                "api_name": "KERNEL32.FreeEnvironmentStringsW",
                "args": [
                    "0x7830"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4120d4",
                "api_name": "KERNEL32.GetLastError",
                "args": [],
                "ret_val": "0x0"
            },
            {
                "pc": "0x411fb4",
                "api_name": "KERNEL32.TlsGetValue",
                "args": [
                    "0x0"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x4120e3",
                "api_name": "kernel32.FlsGetValue",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x41213e",
                "api_name": "KERNEL32.SetLastError",
                "args": [
                    "0x0"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4120d4",
                "api_name": "KERNEL32.GetLastError",
                "args": [],
                "ret_val": "0x0"
            },
            {
                "pc": "0x411fb4",
                "api_name": "KERNEL32.TlsGetValue",
                "args": [
                    "0x0"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x4120e3",
                "api_name": "kernel32.FlsGetValue",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x41213e",
                "api_name": "KERNEL32.SetLastError",
                "args": [
                    "0x0"
                ],
                "ret_val": null
            },
            {
                "pc": "0x411cec",
                "api_name": "KERNEL32.EnterCriticalSection",
                "args": [
                    "0x425138"
                ],
                "ret_val": null
            },
            {
                "pc": "0x412b7d",
                "api_name": "KERNEL32.InterlockedDecrement",
                "args": [
                    "0x423f40"
                ],
                "ret_val": "0xffffffff"
            }
        ],
        "ret_val": "0x352b58",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0xfeedf204",
            "address": "0xfeedf204",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211f10",
                "ebp": "0x01211f44",
                "eip": "0xfeedf204",
                "esi": "0x00352b58",
                "edi": "0x00004610",
                "eax": "0x00352b58",
                "ebx": "0x00000000",
                "ecx": "0x0000000d",
                "edx": "0x00007800"
            },
            "stack": [
                "sp+0x00: 0x00412ba8 -> emu.module.4615db3a06a2fbb2f2eeeab0cba1ff4305800088a424b110c409798c51a501ad.0x400000",
                "sp+0x04: 0x00352b58",
                "sp+0x08: 0xf4ec367a",
                "sp+0x0c: 0x00004610 -> api.heap.HeapAlloc.0x4610",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00000000",
                "sp+0x18: 0x00352b58",
                "sp+0x1c: 0x01211f18 -> emu.stack.0x1200000",
                "sp+0x20: 0x0041213e -> emu.module.4615db3a06a2fbb2f2eeeab0cba1ff4305800088a424b110c409798c51a501ad.0x400000",
                "sp+0x24: 0x01211f70 -> emu.stack.0x1200000",
                "sp+0x28: 0x00410bd0 -> emu.module.4615db3a06a2fbb2f2eeeab0cba1ff4305800088a424b110c409798c51a501ad.0x400000",
                "sp+0x2c: 0xf58cc7b6",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x01211f80 -> emu.stack.0x1200000",
                "sp+0x38: 0x00412e46 -> emu.module.4615db3a06a2fbb2f2eeeab0cba1ff4305800088a424b110c409798c51a501ad.0x400000",
                "sp+0x3c: 0xf4ec36be"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2367, in InterlockedIncrement\n    val = self.mem_read(Addend, 4)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 258, in mem_read\n    return self.emu.mem_read(addr, size)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 250, in mem_read\n    return bytes(self.emu_eng.mem_read(addr, size))\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 171, in mem_read\n    return self.emu.mem_read(addr, size)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 436, in mem_read\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]