[
    {
        "ep_type": "module_entry",
        "start_addr": "0x404780",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "d7a4b62b6235ce7506b183ce611c7c17e9db4ec5bebab2122dbf39d4da530cfa",
        "apis": [
            {
                "pc": "0x40494f",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x1",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x405c5b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x40e210"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4048c9",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x2000000",
                    "0x2000",
                    "PAGE_NOACCESS"
                ],
                "ret_val": "0x2050000"
            },
            {
                "pc": "0x4048e4",
                "api_name": "KERNEL32.VirtualQuery",
                "args": [
                    "0x2050000",
                    "0x1211e94",
                    "0x1c"
                ],
                "ret_val": "0x1c"
            },
            {
                "pc": "0x4049a3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x1",
                    "0x100"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x405cfd",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f2c"
                ],
                "ret_val": null
            },
            {
                "pc": "0x405e2f",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x405e3d",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405e4a",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e53",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e69",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffff",
                    "0xf001",
                    "0xffffffff",
                    "0x1211f28",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405e2f",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x405e3d",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405e4a",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e53",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e69",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffff",
                    "0xf002",
                    "0xffffffff",
                    "0x1211f28",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405e2f",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x405e3d",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405e4a",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e53",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x405e69",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffff",
                    "0xf003",
                    "0xffffffff",
                    "0x1211f28",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405eb8",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x406091",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x47a0"
            },
            {
                "pc": "0x4049a3",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x1",
                    "0x2a"
                ],
                "ret_val": "0x47c0"
            }
        ],
        "ret_val": "0x3",
        "error": {
            "type": "Failed to get character width from function: KERNEL32.GetEnvironmentStrings",
            "pc": "0xfeedf080",
            "address": "0xfeedf080",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211f5c",
                "ebp": "0x01211f70",
                "eip": "0xfeedf080",
                "esi": "0x00000000",
                "edi": "0x00000000",
                "eax": "0x00000003",
                "ebx": "0x00000000",
                "ecx": "0xffffffff",
                "edx": "0x01211f6c"
            },
            "stack": [
                "sp+0x00: 0x0040612f -> emu.module.f3cc1bd3d092dbb657506f4e0401b934f5eab149ba52b16a12b54139f5c955d8.0x400000",
                "sp+0x04: 0x00000000",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x00000000",
                "sp+0x10: 0x00000004",
                "sp+0x14: 0x01211fe4 -> emu.stack.0x1200000",
                "sp+0x18: 0x004047e7 -> emu.module.f3cc1bd3d092dbb657506f4e0401b934f5eab149ba52b16a12b54139f5c955d8.0x400000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2458, in GetEnvironmentStrings\n    cw = self.get_char_width(ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 343, in get_char_width\n    raise ApiEmuError('Failed to get character width from function: %s' % (name))\nspeakeasy.errors.ApiEmuError: Failed to get character width from function: KERNEL32.GetEnvironmentStrings\n"
        },
        "dynamic_code_segments": []
    }
]