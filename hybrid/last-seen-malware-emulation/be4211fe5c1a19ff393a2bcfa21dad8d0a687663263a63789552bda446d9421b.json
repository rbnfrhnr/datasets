[
    {
        "ep_type": "module_entry",
        "start_addr": "0x404c00",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "16a7c46b3493a019c54ca147c7d77b743244314cb8aa7dd31afb36171e49c58c",
        "apis": [
            {
                "pc": "0x404c2c",
                "api_name": "KERNEL32.GetVersion",
                "args": [],
                "ret_val": "0x1db10106"
            },
            {
                "pc": "0x404d5f",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x1",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x404dd7",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x400000",
                    "0x2000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x450000"
            },
            {
                "pc": "0x404df0",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x450000",
                    "0x10000",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x450000"
            },
            {
                "pc": "0x4061cb",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f70"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4062fe",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x40630c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4062fe",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x40630c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4062fe",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x40630c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x406350",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x4073a1",
                "api_name": "KERNEL32.GetACP",
                "args": [],
                "ret_val": "0x4e4"
            },
            {
                "pc": "0x4073f8",
                "api_name": "KERNEL32.GetCPInfo",
                "args": [
                    "0x4e4",
                    "0x1211f98"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x404c81",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x4690"
            },
            {
                "pc": "0x40724f",
                "api_name": "KERNEL32.GetEnvironmentStringsW",
                "args": [],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x4072c0",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x46b0",
                    "0xcd",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xcd"
            },
            {
                "pc": "0x4072e7",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x46b0",
                    "0xcd",
                    "0x450200",
                    "0xcd",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xcd"
            },
            {
                "pc": "0x4072fd",
                "api_name": "KERNEL32.FreeEnvironmentStringsW",
                "args": [
                    "0x46b0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x406f97",
                "api_name": "KERNEL32.GetModuleFileNameA",
                "args": [
                    "0x0",
                    "C:\\Windows\\system32\\be4211fe5c1a19ff393a2bcfa21dad8d0a687663263a63789552bda446d9421b",
                    "0x104"
                ],
                "ret_val": "0x54"
            },
            {
                "pc": "0x4063d0",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x800"
                ],
                "ret_val": "0x7000"
            },
            {
                "pc": "0x401e45",
                "api_name": "WSOCK32.WSAStartup",
                "args": [
                    "0x101",
                    "0x1211de8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4040e6",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x2010"
                ],
                "ret_val": "0xa000"
            },
            {
                "pc": "0x4040e6",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x2010"
                ],
                "ret_val": "0xd000"
            },
            {
                "pc": "0x4040e6",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x1f0"
                ],
                "ret_val": "0x7810"
            },
            {
                "pc": "0x402377",
                "api_name": "WSOCK32.ioctlsocket",
                "args": [
                    "0x4502ec",
                    "0x0",
                    "0x3"
                ],
                "ret_val": "0x2736"
            },
            {
                "pc": "0x4024ae",
                "api_name": "WSOCK32.inet_addr",
                "args": [
                    ""
                ],
                "ret_val": "0xffffffff"
            }
        ],
        "ret_val": "0xffffffff",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x407678",
            "address": "0x407678",
            "instr": "push ebp",
            "regs": {
                "esp": "0x01211f30",
                "ebp": "0x004502ec",
                "eip": "0x00407678",
                "esi": "0xffffffff",
                "edi": "0x00007910",
                "eax": "0xffffffff",
                "ebx": "0xffffffff",
                "ecx": "0x000000c0",
                "edx": "0x00007910"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00007a20 -> emu.struct.EXCEPTION_RECORD.0x7a20",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00007a80 -> emu.struct.EXCEPTION_CONTEXT.0x7a80",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00007810 -> api.heap.HeapAlloc.0x7810",
                "sp+0x18: 0x0040c2da -> emu.module.be4211fe5c1a19ff393a2bcfa21dad8d0a687663263a63789552bda446d9421b.0x400000",
                "sp+0x1c: 0x0000781a -> api.heap.HeapAlloc.0x7810",
                "sp+0x20: 0x004024bb -> emu.module.be4211fe5c1a19ff393a2bcfa21dad8d0a687663263a63789552bda446d9421b.0x400000",
                "sp+0x24: 0x00007910 -> api.heap.HeapAlloc.0x7810",
                "sp+0x28: 0xffffffff",
                "sp+0x2c: 0x000000c0",
                "sp+0x30: 0xffffffff",
                "sp+0x34: 0x004502d0 -> api.VirtualAlloc.0x450000",
                "sp+0x38: 0x00007810 -> api.heap.HeapAlloc.0x7810",
                "sp+0x3c: 0x004036e6 -> emu.module.be4211fe5c1a19ff393a2bcfa21dad8d0a687663263a63789552bda446d9421b.0x400000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x404634",
                "instr": "mov al, byte ptr [esi]",
                "exception_code": "0xc0000005",
                "handler_address": "0x407678",
                "registers": {
                    "esp": "0x01211f30",
                    "ebp": "0x004502ec",
                    "eip": "0x00404634",
                    "esi": "0xffffffff",
                    "edi": "0x00007910",
                    "eax": "0xffffffff",
                    "ebx": "0x000000c0",
                    "ecx": "0x000000c0",
                    "edx": "0x00007910"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]