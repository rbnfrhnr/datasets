[
    {
        "ep_type": "module_entry",
        "start_addr": "0x4508ce",
        "ep_args": [
            "0x4020",
            "0x4030",
            "0x4040",
            "0x4050"
        ],
        "apihash": "0d033829c74ed85ba56f634186f506f10d65bc84ede1b79603f104efe37f7d85",
        "apis": [
            {
                "pc": "0x450901",
                "api_name": "MSVCRT.__set_app_type",
                "args": [
                    "0x2"
                ],
                "ret_val": null
            },
            {
                "pc": "0x450916",
                "api_name": "MSVCRT.__p__fmode",
                "args": [],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x450924",
                "api_name": "MSVCRT.__p__commode",
                "args": [],
                "ret_val": "0x4620"
            },
            {
                "pc": "0x450a3b",
                "api_name": "MSVCRT._controlfp",
                "args": [
                    "0x10000",
                    "0x30000"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x450965",
                "api_name": "MSVCRT._initterm",
                "args": [
                    "0x46a008",
                    "0x46a00c"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x450989",
                "api_name": "MSVCRT.__getmainargs",
                "args": [
                    "0x1211f84",
                    "0x1211f74",
                    "0x1211f80",
                    "0x0",
                    "0x1211f78"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x450998",
                "api_name": "MSVCRT._initterm",
                "args": [
                    "0x46a000",
                    "0x46a004"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4509d8",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f88"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4509fc",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x450ab5",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x0",
                    "0x100000",
                    "0x1000000"
                ],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x450af9",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x46b0",
                    "0x8",
                    "0x3c"
                ],
                "ret_val": "0x46d0"
            },
            {
                "pc": "0x450b0f",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x450b23",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x46b0",
                    "0x8",
                    "0x4b000"
                ],
                "ret_val": "0x4c000"
            },
            {
                "pc": "0x450b34",
                "api_name": "KERNEL32.CreateEventA",
                "args": [
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x3ac"
            },
            {
                "pc": "0x450e69",
                "api_name": "KERNEL32.GetProcessHeap",
                "args": [],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x450e70",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x46b0",
                    "0x0",
                    "0x3b9aca00"
                ],
                "ret_val": "0x12a062000"
            }
        ],
        "ret_val": "0x2a062000",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf0c0",
            "address": "0xfeedf0c0",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211ca8",
                "ebp": "0x2a062000",
                "eip": "0xfeedf0c0",
                "esi": "0xfeedf00c",
                "edi": "0x00000000",
                "eax": "0x2a062000",
                "ebx": "0xfeedf014",
                "ecx": "0x004620e0",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0x00450e8a -> emu.module.593c5558cb8b7ee23720b06604ddf701b9239976fe02eaa3652bbcdf5d2ea346.0x400000",
                "sp+0x04: 0x2a062000",
                "sp+0x08: 0x00000090",
                "sp+0x0c: 0x3b9aca00",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0xfeedf00c",
                "sp+0x18: 0x000046d0 -> api.heap.HeapAlloc.0x46d0",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/msvcrt.py\", line 566, in memset\n    self.mem_write(ptr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]