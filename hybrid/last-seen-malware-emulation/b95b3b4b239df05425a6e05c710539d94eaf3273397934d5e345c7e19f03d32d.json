[
    {
        "ep_type": "module_entry",
        "start_addr": "0x42717d",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "19f72badaac05676160d820f546527ac07c6aeeaa66996bded721487060dbe05",
        "apis": [
            {
                "pc": "0x403701",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "KERNEL32"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x40371f",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "VirtualProtect"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x40372e",
                "api_name": "kernel32.VirtualProtect",
                "args": [
                    "0x40015f",
                    "0x78",
                    "0x4",
                    "0x1211fc4"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x403742",
                "api_name": "kernel32.VirtualProtect",
                "args": [
                    "0x40015f",
                    "0x78",
                    "0x40",
                    "0x1211fc4"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "iphlpapi.DLL"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "GetAdaptersInfo"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "KERNEL32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetModuleHandleA"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetProcAddress"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "CloseHandle"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "RtlUnwind"
                ],
                "ret_val": "0xfeee0004"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetModuleHandleW"
                ],
                "ret_val": "0xfeee0005"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "USER32.DLL"
                ],
                "ret_val": "0x77d10000"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77d10000",
                    "GetCursorInfo"
                ],
                "ret_val": "0xfeee0006"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "CRTDLL.DLL"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "__GetMainArgs"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "exit"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "raise"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "signal"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "ulib.dll"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "?Initialize@ARRAY@@QAEEKK@Z"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "??0DSTRING@@QAE@XZ"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "??0STRING_ARGUMENT@@QAE@XZ"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "??0ARRAY@@QAE@XZ"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x0",
                    "??0ARGUMENT_LEXEMIZER@@QAE@XZ"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x403753",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "ntdll.dll"
                ],
                "ret_val": "0x7c000000"
            },
            {
                "pc": "0x40377b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x7c000000",
                    "RtlFreeHeap"
                ],
                "ret_val": "0xfeee0007"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)",
            "pc": "0x40109a",
            "address": "0x40109a",
            "instr": "cld ",
            "regs": {
                "esp": "0x01211f8c",
                "ebp": "0x01211fe4",
                "eip": "0x0040109a",
                "esi": "0x00000000",
                "edi": "0x00000000",
                "eax": "0x00000000",
                "ebx": "0xffffffff",
                "ecx": "0x00000000",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00004600 -> emu.struct.EXCEPTION_RECORD.0x4600",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004660 -> emu.struct.EXCEPTION_CONTEXT.0x4660",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00401267 -> emu.module.b95b3b4b239df05425a6e05c710539d94eaf3273397934d5e345c7e19f03d32d.0x400000",
                "sp+0x18: 0x00405020 -> emu.module.b95b3b4b239df05425a6e05c710539d94eaf3273397934d5e345c7e19f03d32d.0x400000",
                "sp+0x1c: 0x00405024 -> emu.module.b95b3b4b239df05425a6e05c710539d94eaf3273397934d5e345c7e19f03d32d.0x400000",
                "sp+0x20: 0x00405028 -> emu.module.b95b3b4b239df05425a6e05c710539d94eaf3273397934d5e345c7e19f03d32d.0x400000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x0040378d -> emu.module.b95b3b4b239df05425a6e05c710539d94eaf3273397934d5e345c7e19f03d32d.0x400000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x0",
                "instr": "disasm_failed",
                "exception_code": "0xc0000005",
                "handler_address": "0x40109a",
                "registers": {
                    "esp": "0x01211f8c",
                    "ebp": "0x01211fe4",
                    "eip": "0x00000000",
                    "esi": "0x00000000",
                    "edi": "0x00000000",
                    "eax": "0x00000000",
                    "ebx": "0x00000000",
                    "ecx": "0x00000000",
                    "edx": "0x00000000"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]