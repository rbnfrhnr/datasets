[
    {
        "ep_type": "module_entry",
        "start_addr": "0x40a630",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "fa29d1d9caad6d6a247c36b770e482c0fdc9aba4ff41ba4073b7234d1d7747ff",
        "apis": [
            {
                "pc": "0x404515",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x402f4a",
                "api_name": "user32.GetKeyboardType",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x4"
            },
            {
                "pc": "0x4043d8",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x40117f",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f58"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4043ec",
                "api_name": "KERNEL32.GetVersion",
                "args": [],
                "ret_val": "0x1db10106"
            },
            {
                "pc": "0x4043fd",
                "api_name": "KERNEL32.GetVersion",
                "args": [],
                "ret_val": "0x1db10106"
            },
            {
                "pc": "0x404439",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0xf134"
            },
            {
                "pc": "0x404ad3",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x404ae4",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetDiskFreeSpaceExA"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x404df8",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x40c73c"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40187b",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x40c5b8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4018b8",
                "api_name": "KERNEL32.LocalAlloc",
                "args": [
                    "0x0",
                    "0xff8"
                ],
                "ret_val": "0x7000"
            },
            {
                "pc": "0x4013ac",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x100000",
                    "0x2000",
                    "PAGE_NOACCESS"
                ],
                "ret_val": "0x50000"
            },
            {
                "pc": "0x4011ec",
                "api_name": "KERNEL32.LocalAlloc",
                "args": [
                    "0x0",
                    "0x644"
                ],
                "ret_val": "0x8000"
            },
            {
                "pc": "0x40157e",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x50000",
                    "0x4000",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x50000"
            },
            {
                "pc": "0x406f86",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x406f86",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "mapi32.dll"
                ],
                "ret_val": "0x0"
            }
        ],
        "ret_val": "0x51200",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x406ad4",
            "address": "0x406ad4",
            "instr": "push ebp",
            "regs": {
                "esp": "0x01211788",
                "ebp": "0x012117b8",
                "eip": "0x00406ad4",
                "esi": "0x0040c7ec",
                "edi": "0x0005126d",
                "eax": "0x00051200",
                "ebx": "0xffffffff",
                "ecx": "0x0000000d",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00008660 -> emu.struct.EXCEPTION_RECORD.0x8660",
                "sp+0x08: 0x0121179c -> emu.stack.0x1200000",
                "sp+0x0c: 0x000086c0 -> emu.struct.EXCEPTION_CONTEXT.0x86c0",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x012117c8 -> emu.stack.0x1200000",
                "sp+0x18: 0x00406ad4 -> emu.module.f23ff3b4c5d167f4b1828bacead45e62781361a214b030f640ae7a5da107ae2e.0x400000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00406d05 -> emu.module.f23ff3b4c5d167f4b1828bacead45e62781361a214b030f640ae7a5da107ae2e.0x400000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x012117e0 -> emu.stack.0x1200000",
                "sp+0x2c: 0x0040c7ec -> emu.module.f23ff3b4c5d167f4b1828bacead45e62781361a214b030f640ae7a5da107ae2e.0x400000",
                "sp+0x30: 0x01211fb4 -> emu.stack.0x1200000",
                "sp+0x34: 0x00406fb8 -> emu.module.f23ff3b4c5d167f4b1828bacead45e62781361a214b030f640ae7a5da107ae2e.0x400000",
                "sp+0x38: 0x00051260 -> api.VirtualAlloc.0x50000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x406b43",
                "instr": "cmp word ptr [edx], 0x5a4d",
                "exception_code": "0xc0000005",
                "handler_address": "0x406ad4",
                "registers": {
                    "esp": "0x01211788",
                    "ebp": "0x012117b8",
                    "eip": "0x00406b43",
                    "esi": "0x0040c7ec",
                    "edi": "0x0005126d",
                    "eax": "0x00051200",
                    "ebx": "0x00406d05",
                    "ecx": "0x0000000d",
                    "edx": "0x00000000"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]