[
    {
        "ep_type": "module_entry",
        "start_addr": "0x40c0ac",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "a6368b17f4634c4ad97bcbc230b01961d3c3ff398d8795b350e03cb95b3bc38c",
        "apis": [
            {
                "pc": "0x4039b9",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x402e36",
                "api_name": "user32.GetKeyboardType",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x4"
            },
            {
                "pc": "0x40c071",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x401087",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f54"
                ],
                "ret_val": null
            },
            {
                "pc": "0x40c085",
                "api_name": "KERNEL32.GetACP",
                "args": [],
                "ret_val": "0x4e4"
            },
            {
                "pc": "0x40c08f",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x20fa4"
            },
            {
                "pc": "0x40d835",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x40d83e",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "ntdll.dll"
                ],
                "ret_val": "0x7c000000"
            },
            {
                "pc": "0x40d857",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "CreateProcessA"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x40d861",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetThreadContext"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x40d86b",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "SetThreadContext"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x40d875",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "ReadProcessMemory"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x40d87f",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "VirtualProtectEx"
                ],
                "ret_val": "0xfeee0004"
            },
            {
                "pc": "0x40d889",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "VirtualAllocEx"
                ],
                "ret_val": "0xfeee0005"
            },
            {
                "pc": "0x40d893",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "WriteProcessMemory"
                ],
                "ret_val": "0xfeee0006"
            },
            {
                "pc": "0x40d89d",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "ResumeThread"
                ],
                "ret_val": "0xfeee0007"
            },
            {
                "pc": "0x40d8a7",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "VirtualAlloc"
                ],
                "ret_val": "0xfeee0008"
            },
            {
                "pc": "0x40d8b1",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "VirtualFree"
                ],
                "ret_val": "0xfeee0009"
            },
            {
                "pc": "0x40d8be",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x7c000000",
                    "ZwUnmapViewOfSection"
                ],
                "ret_val": "0xfeee000a"
            },
            {
                "pc": "0x40d8c8",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetModuleFileNameA"
                ],
                "ret_val": "0xfeee000b"
            },
            {
                "pc": "0x40d8d5",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetCommandLineA"
                ],
                "ret_val": "0xfeee000c"
            },
            {
                "pc": "0x40d8e2",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "FindResourceA"
                ],
                "ret_val": "0xfeee000d"
            },
            {
                "pc": "0x40d8ef",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "SizeofResource"
                ],
                "ret_val": "0xfeee000e"
            },
            {
                "pc": "0x40d8fc",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "LoadResource"
                ],
                "ret_val": "0xfeee000f"
            },
            {
                "pc": "0x40d909",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "LockResource"
                ],
                "ret_val": "0xfeee0010"
            },
            {
                "pc": "0x40d916",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x7c000000",
                    "RtlDecompressBuffer"
                ],
                "ret_val": "0xfeee0011"
            },
            {
                "pc": "0x40d93a",
                "api_name": "kernel32.FindResourceA",
                "args": [
                    "0x0",
                    "PACKAGEINFO",
                    "0x2"
                ],
                "ret_val": "0x4160f0"
            },
            {
                "pc": "0x40d949",
                "api_name": "kernel32.SizeofResource",
                "args": [
                    "0x0",
                    "0x4160f0"
                ],
                "ret_val": "0x354d4"
            },
            {
                "pc": "0x40d958",
                "api_name": "kernel32.LoadResource",
                "args": [
                    "0x0",
                    "0x4160f0"
                ],
                "ret_val": "0x416168"
            },
            {
                "pc": "0x40d963",
                "api_name": "kernel32.LockResource",
                "args": [
                    "0x416168"
                ],
                "ret_val": "0x416168"
            },
            {
                "pc": "0x40d97c",
                "api_name": "kernel32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x354d4",
                    "0x3000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x50000"
            },
            {
                "pc": "0x40da99",
                "api_name": "kernel32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x2b4cf0",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x5ba000"
            },
            {
                "pc": "0x40dac9",
                "api_name": "ntdll.RtlDecompressBuffer",
                "args": [
                    "0x102",
                    "0x5ba000",
                    "0x2b4cf0",
                    "0x50024",
                    "0x354b0",
                    "0x1211edc"
                ],
                "ret_val": "0xc000025f"
            },
            {
                "pc": "0x40db20",
                "api_name": "kernel32.GetModuleFileNameA",
                "args": [
                    "0x0",
                    "C:\\Windows\\system32\\df5d888ef28465f0dd671bcf09e86117a779746f21467718e3e15c410934671a",
                    "0x400"
                ],
                "ret_val": "0x54"
            },
            {
                "pc": "0x40db40",
                "api_name": "kernel32.GetCommandLineA",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x40db4b",
                "api_name": "kernel32.CreateProcessA",
                "args": [
                    "C:\\Windows\\system32\\df5d888ef28465f0dd671bcf09e86117a779746f21467718e3e15c410934671a",
                    "svchost.exe myarg1 myarg2",
                    "0x0",
                    "0x0",
                    "0x0",
                    "CREATE_SUSPENDED",
                    "0x0",
                    "0x0",
                    "0x1211e70",
                    "0x1211e60"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40db64",
                "api_name": "kernel32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0xd0",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0xc23000"
            },
            {
                "pc": "0x40dba2",
                "api_name": "kernel32.GetThreadContext",
                "args": [
                    "0x570",
                    "0xc23000"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40dbce",
                "api_name": "kernel32.ReadProcessMemory",
                "args": [
                    "C:\\Windows\\system32\\df5d888ef28465f0dd671bcf09e86117a779746f21467718e3e15c410934671a",
                    "0x5ba008",
                    "0x1211f04",
                    "0x4",
                    "0x1211f0c"
                ],
                "ret_val": "0x1"
            }
        ],
        "ret_val": "0x6f777024",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x40336c",
            "address": "0x40336c",
            "instr": "mov eax, dword ptr [esp + 4]",
            "regs": {
                "esp": "0x01211a20",
                "ebp": "0x01211fb8",
                "eip": "0x0040336c",
                "esi": "0x004039f4",
                "edi": "0x002b4cf0",
                "eax": "0x6f777024",
                "ebx": "0xffffffff",
                "ecx": "0x000854d3",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00004b60 -> emu.struct.EXCEPTION_RECORD.0x4b60",
                "sp+0x08: 0x01211fd8 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004bc0 -> emu.struct.EXCEPTION_CONTEXT.0x4bc0",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00000000",
                "sp+0x18: 0x00000000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x216038ce",
                "sp+0x24: 0x6f44a530",
                "sp+0x28: 0x5eb51c2a",
                "sp+0x2c: 0xaf092616",
                "sp+0x30: 0x86d560ce",
                "sp+0x34: 0xc8cf6efa",
                "sp+0x38: 0x450e6376",
                "sp+0x3c: 0x6c632fe9"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/tmp/embervenv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x40dbfe",
                "instr": "mov eax, dword ptr [eax + 0x34]",
                "exception_code": "0xc0000005",
                "handler_address": "0x40336c",
                "registers": {
                    "esp": "0x01211a20",
                    "ebp": "0x01211fb8",
                    "eip": "0x0040dbfe",
                    "esi": "0x004039f4",
                    "edi": "0x002b4cf0",
                    "eax": "0x6f777024",
                    "ebx": "0x00c23000",
                    "ecx": "0x000854d3",
                    "edx": "0x00000000"
                }
            }
        ],
        "process_events": [
            {
                "event": "create",
                "pid": 135140,
                "path": "C:\\Windows\\system32\\df5d888ef28465f0dd671bcf09e86117a779746f21467718e3e15c410934671a",
                "cmdline": "svchost.exe myarg1 myarg2"
            },
            {
                "event": "mem_read",
                "pid": 135140,
                "path": "C:\\Windows\\system32\\df5d888ef28465f0dd671bcf09e86117a779746f21467718e3e15c410934671a",
                "data": "AAAAAA==",
                "size": 4,
                "base": "0x5ba008"
            }
        ],
        "dynamic_code_segments": []
    }
]