[
    {
        "ep_type": "module_entry",
        "start_addr": "0x484570",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "bfe8ae1f3adbad1d7faac59ed159fbfbcf5ce6389c4b41526b2807ef8a0ac357",
        "apis": [
            {
                "pc": "0x48488c",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd4"
                ],
                "ret_val": null
            },
            {
                "pc": "0x48489b",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0xba1c"
            },
            {
                "pc": "0x4848a4",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0xba08"
            },
            {
                "pc": "0x4848ad",
                "api_name": "KERNEL32.GetTickCount64",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x4848ba",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fcc"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x485960",
                "api_name": "KERNEL32.IsProcessorFeaturePresent",
                "args": [
                    "PF_XMMI64_INSTRUCTIONS_AVAILABLE"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4857cf",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x4857df",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "AddDllDirectory"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x4857f1",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "ntdll"
                ],
                "ret_val": "0x7c000000"
            },
            {
                "pc": "0x485801",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x7c000000",
                    "RtlWow64EnableFsRedirectionEx"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x484414",
                "api_name": "msvcrt._initterm_e",
                "args": [
                    "0x48755c",
                    "0x487570"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x484448",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x4874cc",
                    "0x487558"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x484743",
                "api_name": "msvcrt.memset",
                "args": [
                    "0x1211f64",
                    "0x0",
                    "0x44"
                ],
                "ret_val": "0x1211f64"
            },
            {
                "pc": "0x484750",
                "api_name": "KERNEL32.GetStartupInfoW",
                "args": [
                    "0x1211f64"
                ],
                "ret_val": null
            },
            {
                "pc": "0x42dc50",
                "api_name": "KERNEL32.SetErrorMode",
                "args": [
                    "0x1"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x482a90",
                "api_name": "KERNEL32.AreFileApisANSI",
                "args": [],
                "ret_val": "0x1"
            },
            {
                "pc": "0x482a9f",
                "api_name": "KERNEL32.MultiByteToWideChar",
                "args": [
                    "0x3",
                    "0x8",
                    "ole32.dll",
                    "0xffffffff",
                    "0x1210cf0",
                    "0x200"
                ],
                "ret_val": "0xa"
            },
            {
                "pc": "0x482ae7",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x482af3",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "AddDllDirectory"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x482b1d",
                "api_name": "KERNEL32.LoadLibraryExW",
                "args": [
                    "ole32.dll",
                    "0x0",
                    "LOAD_LIBRARY_SEARCH_SYSTEM32"
                ],
                "ret_val": "0x65500000"
            },
            {
                "pc": "0x48309d",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x65500000",
                    "CoInitialize"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x42dc61",
                "api_name": "ole32.CoInitialize",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x42dc8e",
                "api_name": "COMCTL32.InitCommonControlsEx",
                "args": [
                    "0x12111d8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x42dcbd",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0xba1c"
            },
            {
                "pc": "0x42dcd2",
                "api_name": "msvcrt.??2@YAPAXI@Z",
                "args": [],
                "ret_val": null
            },
            {
                "pc": "0x4842bf",
                "api_name": "msvcrt._except_handler4_common",
                "args": [
                    "0x4ac038",
                    "0x485b15",
                    "0x46e0",
                    "0x1211fd4",
                    "0x4740",
                    "0x0"
                ],
                "ret_val": "0x0"
            }
        ],
        "ret_val": "0xba1c",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x4842a0",
            "address": "0x4842a0",
            "instr": "push ebp",
            "regs": {
                "esp": "0x01211128",
                "ebp": "0x01211f98",
                "eip": "0x004842a0",
                "esi": "0x00000000",
                "edi": "0x00000000",
                "eax": "0x0000ba1c",
                "ebx": "0xffffffff",
                "ecx": "0x00000000",
                "edx": "0x01212000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x000047b0 -> emu.struct.EXCEPTION_RECORD.0x47b0",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004810 -> emu.struct.EXCEPTION_CONTEXT.0x4810",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0xfeedf004",
                "sp+0x18: 0x000046e0 -> emu.struct.EXCEPTION_RECORD.0x46e0",
                "sp+0x1c: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x20: 0x00004740 -> emu.struct.EXCEPTION_CONTEXT.0x4740",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x0000000a",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x42dcd9",
                "instr": "mov dword ptr [eax], ecx",
                "exception_code": "0xc0000005",
                "handler_address": "0x4842a0",
                "registers": {
                    "esp": "0x0121113c",
                    "ebp": "0x01211f98",
                    "eip": "0x0042dcd9",
                    "esi": "0x00000000",
                    "edi": "0x00000000",
                    "eax": "0x0000ba1c",
                    "ebx": "0x00000001",
                    "ecx": "0x00000000",
                    "edx": "0x01212000"
                }
            },
            {
                "pc": "0x48450a",
                "instr": "mov eax, dword ptr [ecx]",
                "exception_code": "0xc0000005",
                "handler_address": "0x4842a0",
                "registers": {
                    "esp": "0x01211128",
                    "ebp": "0x01211f98",
                    "eip": "0x0048450a",
                    "esi": "0x00000000",
                    "edi": "0x00000000",
                    "eax": "0x0000ba1c",
                    "ebx": "0x00000001",
                    "ecx": "0x00000000",
                    "edx": "0x01212000"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]