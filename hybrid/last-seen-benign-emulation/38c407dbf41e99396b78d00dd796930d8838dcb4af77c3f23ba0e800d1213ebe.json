[
    {
        "ep_type": "module_entry",
        "start_addr": "0x5cbb80",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "04874d9c4c4ecce56881d0b02ff185510d84fca5e7ca994e98275b97867aad6d",
        "apis": [
            {
                "pc": "0x5cc39b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd4"
                ],
                "ret_val": null
            },
            {
                "pc": "0x5cc3aa",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0xafd0"
            },
            {
                "pc": "0x5cc3b3",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0xafbc"
            },
            {
                "pc": "0x5cc3c0",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fcc"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x5cc85b",
                "api_name": "KERNEL32.IsProcessorFeaturePresent",
                "args": [
                    "PF_XMMI64_INSTRUCTIONS_AVAILABLE"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x5cba67",
                "api_name": "ucrtbase_clr0400._initterm_e",
                "args": [
                    "0x40103c",
                    "0x401050"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x5cba8d",
                "api_name": "ucrtbase_clr0400._initterm",
                "args": [
                    "0x401000",
                    "0x401038"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x5cbaf3",
                "api_name": "ucrtbase_clr0400.__p___argv",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x5cbafa",
                "api_name": "ucrtbase_clr0400.__p___argc",
                "args": [],
                "ret_val": "0x4630"
            },
            {
                "pc": "0x5cbb01",
                "api_name": "ucrtbase_clr0400._get_initial_narrow_environment",
                "args": [],
                "ret_val": "0x4640"
            },
            {
                "pc": "0x436b5c",
                "api_name": "KERNEL32.HeapSetInformation",
                "args": [
                    "0x0",
                    "0x1",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x5cbbdb",
                "api_name": "ucrtbase_clr0400.malloc",
                "args": [
                    "0xc"
                ],
                "ret_val": "0x4740"
            },
            {
                "pc": "0x5cbbdb",
                "api_name": "ucrtbase_clr0400.malloc",
                "args": [
                    "0x28"
                ],
                "ret_val": "0x4750"
            },
            {
                "pc": "0x43ea48",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x4750"
                ],
                "ret_val": null
            },
            {
                "pc": "0x5cddd3",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x1211e7c"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x5cc275",
                "api_name": "KERNEL32.EnterCriticalSection",
                "args": [
                    "0x5f1344"
                ],
                "ret_val": null
            },
            {
                "pc": "0x5cc2c2",
                "api_name": "KERNEL32.LeaveCriticalSection",
                "args": [
                    "0x5f1344"
                ],
                "ret_val": null
            },
            {
                "pc": "0x437f75",
                "api_name": "KERNEL32.GetProcessHeap",
                "args": [],
                "ret_val": "0x4780"
            },
            {
                "pc": "0x5cbe6c",
                "api_name": "ucrtbase_clr0400._register_onexit_function",
                "args": [
                    "0x5f1008",
                    "0x5deec0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x5cc275",
                "api_name": "KERNEL32.EnterCriticalSection",
                "args": [
                    "0x5f1344"
                ],
                "ret_val": null
            },
            {
                "pc": "0x5cc2c2",
                "api_name": "KERNEL32.LeaveCriticalSection",
                "args": [
                    "0x5f1344"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)",
            "pc": "0x5cfeb6",
            "address": "0x5cfeb6",
            "instr": "mov edx, dword ptr [esp + 8]",
            "regs": {
                "esp": "0x01211e60",
                "ebp": "0x01211ea4",
                "eip": "0x005cfeb6",
                "esi": "0xfc76de9a",
                "edi": "0x80004005",
                "eax": "0x00000000",
                "ebx": "0xffffffff",
                "ecx": "0xfc76de9a",
                "edx": "0x01212000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x000047b0 -> emu.struct.EXCEPTION_RECORD.0x47b0",
                "sp+0x08: 0x01211e98 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004810 -> emu.struct.EXCEPTION_CONTEXT.0x4810",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x005cc2a1 -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000",
                "sp+0x18: 0x005f135c -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000",
                "sp+0x1c: 0x005f8000 -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000",
                "sp+0x20: 0x00437fa4 -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000",
                "sp+0x24: 0x005f13f0 -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000",
                "sp+0x28: 0x6ad0c5de",
                "sp+0x2c: 0x80004005",
                "sp+0x30: 0x01211eec -> emu.stack.0x1200000",
                "sp+0x34: 0x000047a0 -> emu.struct.EXCEPTION_POINTERS.0x47a0",
                "sp+0x38: 0x01211ec0 -> emu.stack.0x1200000",
                "sp+0x3c: 0x005cfeb6 -> emu.module.38c407dbf41e99396b78d00dd796930d8838dcb4af77c3f23ba0e800d1213ebe.0x400000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0xfc76de9a",
                "instr": "disasm_failed",
                "exception_code": "0xc0000005",
                "handler_address": "0x5cfeb6",
                "registers": {
                    "esp": "0x01211e60",
                    "ebp": "0x01211ea4",
                    "eip": "0xfc76de9a",
                    "esi": "0xfc76de9a",
                    "edi": "0x80004005",
                    "eax": "0x00000000",
                    "ebx": "0x00000000",
                    "ecx": "0xfc76de9a",
                    "edx": "0x01212000"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]