[
    {
        "ep_type": "module_entry",
        "start_addr": "0x14000e320",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "19407f1ecce5a638164744282545b381b09c7fb882242935526439db0b6547c6",
        "apis": [
            {
                "pc": "0x140010364",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x1",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x4940"
            },
            {
                "pc": "0x1400106ef",
                "api_name": "KERNEL32.QueryPerformanceFrequency",
                "args": [
                    "0x1211f00"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x1400106fe",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211ef8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x1400103f8",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x4940",
                    "0x1",
                    "0x40f"
                ],
                "ret_val": "0x4960"
            },
            {
                "pc": "0x1400107b7",
                "api_name": "KERNEL32.GetStartupInfoW",
                "args": [
                    "0x1211e80"
                ],
                "ret_val": null
            },
            {
                "pc": "0x14001082e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x140010844",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x140010862",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001086b",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001089a",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffffffffffff",
                    "0xf001",
                    "0xffffffffffffffff",
                    "0x1211ee8",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x14001082e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x140010844",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x140010862",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001086b",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001089a",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffffffffffff",
                    "0xf002",
                    "0xffffffffffffffff",
                    "0x1211ee8",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x14001082e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x140010844",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x140010862",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001086b",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffffffffffff"
            },
            {
                "pc": "0x14001089a",
                "api_name": "KERNEL32.DuplicateHandle",
                "args": [
                    "0xffffffffffffffff",
                    "0xf003",
                    "0xffffffffffffffff",
                    "0x1211ee8",
                    "0x0",
                    "0x1",
                    "0x2"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x140010b70",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x4e50"
            },
            {
                "pc": "0x140010fce",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x2000000",
                    "0x2000",
                    "PAGE_NOACCESS"
                ],
                "ret_val": "0x2050000"
            },
            {
                "pc": "0x140010ff9",
                "api_name": "KERNEL32.VirtualQuery",
                "args": [
                    "0x2050000",
                    "0x1211c88",
                    "0x30"
                ],
                "ret_val": "0x30"
            },
            {
                "pc": "0x1400103f8",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x4940",
                    "0x1",
                    "0x49"
                ],
                "ret_val": "0x4e70"
            }
        ],
        "ret_val": "0x3",
        "error": {
            "type": "Failed to get character width from function: KERNEL32.GetEnvironmentStrings",
            "pc": "0xfeedf114",
            "address": "0xfeedf114",
            "instr": "disasm_failed",
            "regs": {
                "rsp": "0x0000000001211ed0",
                "rbp": "0x0000000001211fd8",
                "rip": "0x00000000feedf114",
                "rsi": "0x0000000000000000",
                "rdi": "0x0000000000000000",
                "rax": "0x0000000000000003",
                "rbx": "0x0000000000000000",
                "rcx": "0x0000000000004e69",
                "rdx": "0x0000000000004e90",
                "r8": "0x0000000000004eb2",
                "r9": "0x0000000001211de8",
                "r10": "0x0000000000000000",
                "r11": "0xffffffffffffffff",
                "r12": "0x0000000000000000",
                "r13": "0x0000000000000000",
                "r14": "0x0000000000000000",
                "r15": "0x0000000000000000"
            },
            "stack": [
                "sp+0x00: 0x0000000140010c2d -> emu.module.7c2394f6d4fc78ee2d5fe2db58f2933b9a1938c6891fb7453753108056a1a04c.0x140000000",
                "sp+0x08: 0x0000000000000001",
                "sp+0x10: 0x0000000000000002",
                "sp+0x18: 0x0000000000000000",
                "sp+0x20: 0x0000000000000000",
                "sp+0x28: 0x0000000000000000",
                "sp+0x30: 0x0000000000000000",
                "sp+0x38: 0x0000000000000000",
                "sp+0x40: 0x000000014000e360 -> emu.module.7c2394f6d4fc78ee2d5fe2db58f2933b9a1938c6891fb7453753108056a1a04c.0x140000000",
                "sp+0x48: 0x0000000000000000",
                "sp+0x50: 0x0000000000000000",
                "sp+0x58: 0x0000000000000000",
                "sp+0x60: 0x0000000000000000",
                "sp+0x68: 0x0000000000000000",
                "sp+0x70: 0x0000000000000000",
                "sp+0x78: 0x0000000000000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2458, in GetEnvironmentStrings\n    cw = self.get_char_width(ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 343, in get_char_width\n    raise ApiEmuError('Failed to get character width from function: %s' % (name))\nspeakeasy.errors.ApiEmuError: Failed to get character width from function: KERNEL32.GetEnvironmentStrings\n"
        },
        "dynamic_code_segments": []
    }
]