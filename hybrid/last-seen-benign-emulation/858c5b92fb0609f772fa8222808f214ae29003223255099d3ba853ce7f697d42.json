[
    {
        "ep_type": "module_entry",
        "start_addr": "0x1002f3e",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "cacd2e7cdb5c53b0f94523d2d50772c768705b2efb72bfffc18f8e4526f1901d",
        "apis": [
            {
                "pc": "0x100329e",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x10032aa",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x3204"
            },
            {
                "pc": "0x10032b2",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x3218"
            },
            {
                "pc": "0x10032ba",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x10032c6",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fd0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x1002d36",
                "api_name": "KERNEL32.InterlockedCompareExchange",
                "args": [
                    "0x1004580",
                    "0x1212000",
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x100322f",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x1000000"
            },
            {
                "pc": "0x1002eeb",
                "api_name": "msvcrt.__set_app_type",
                "args": [
                    "0x1"
                ],
                "ret_val": null
            },
            {
                "pc": "0x1002f01",
                "api_name": "msvcrt.__p__fmode",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x1002f0f",
                "api_name": "msvcrt.__p__commode",
                "args": [],
                "ret_val": "0x4600"
            },
            {
                "pc": "0x10031ac",
                "api_name": "msvcrt._controlfp",
                "args": [
                    "0x10000",
                    "0x30000"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x1002fe4",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x1002f91"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x1002dbc",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x10010e0",
                    "0x10010e8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x1002dd5",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x1004580",
                    "0x0"
                ],
                "ret_val": "0x1212000"
            },
            {
                "pc": "0x1002b8c",
                "api_name": "msvcrt.??2@YAPAXI@Z",
                "args": [],
                "ret_val": null
            }
        ],
        "ret_val": "0x1212000",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0x1003172",
            "address": "0x1003172",
            "instr": "mov edi, edi",
            "regs": {
                "esp": "0x01211f7c",
                "ebp": "0x01211fa0",
                "eip": "0x01003172",
                "esi": "0x00000001",
                "edi": "0x01004580",
                "eax": "0x01212000",
                "ebx": "0xffffffff",
                "ecx": "0x00000010",
                "edx": "0x000000e8"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00004620 -> emu.struct.EXCEPTION_RECORD.0x4620",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004680 -> emu.struct.EXCEPTION_CONTEXT.0x4680",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00000001",
                "sp+0x18: 0x00000000",
                "sp+0x1c: 0x00000001",
                "sp+0x20: 0x010010e8 -> emu.module.858c5b92fb0609f772fa8222808f214ae29003223255099d3ba853ce7f697d42.0x1000000",
                "sp+0x24: 0x01211fe4 -> emu.stack.0x1200000",
                "sp+0x28: 0x01002e0d -> emu.module.858c5b92fb0609f772fa8222808f214ae29003223255099d3ba853ce7f697d42.0x1000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0xefb03bc0",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x1002b93",
                "instr": "mov dword ptr [eax], ebx",
                "exception_code": "0xc0000005",
                "handler_address": "0x1003172",
                "registers": {
                    "esp": "0x01211f7c",
                    "ebp": "0x01211fa0",
                    "eip": "0x01002b93",
                    "esi": "0x00000001",
                    "edi": "0x01004580",
                    "eax": "0x01212000",
                    "ebx": "0x00000000",
                    "ecx": "0x00000010",
                    "edx": "0x000000e8"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]