[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0x14007adc0",
        "ep_args": [
            "0x140000000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0x140567751",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x141487708"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0x14007ae40",
        "ep_args": [
            "0x140000000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x140001350",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "2a7be34574d65f7a33d90a5edcdbd1f795b252e4e0616cf951a776b78b89686a",
        "apis": [
            {
                "pc": "0x1400011f9",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x141192a98",
                    "0x141192aa8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x140001213",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x141192a70",
                    "0x141192a80"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x140001250",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x14007b480"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x14000127f",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x8"
                ],
                "ret_val": "0x4960"
            },
            {
                "pc": "0x140001379",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x14007ac90"
                ],
                "ret_val": "0x14007ac90"
            },
            {
                "pc": "0x140081663",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x140081676",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "InitializeConditionVariable"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x140081695",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "WakeAllConditionVariable"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x1400816a8",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "WakeConditionVariable"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x1400816bb",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "SleepConditionVariableCS"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x1400816d1",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x1411ea520",
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x140001379",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x1400183c0"
                ],
                "ret_val": "0x1400183c0"
            },
            {
                "pc": "0x1400016cb",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x4970"
            },
            {
                "pc": "0x1400016dc",
                "api_name": "SHELL32.CommandLineToArgvW",
                "args": [
                    "0x4970",
                    "0x12113b4"
                ],
                "ret_val": "0x49b0"
            },
            {
                "pc": "0x14000173d",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49d0",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xc"
            },
            {
                "pc": "0x14000173d",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49e8",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x14000173d",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49f6",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x140001750",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x3a"
                ],
                "ret_val": "0x4a10"
            },
            {
                "pc": "0x1400017a5",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49d0",
                    "0xffffffff",
                    "0x4a30",
                    "0x1a",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x1a"
            },
            {
                "pc": "0x1400017a5",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49e8",
                    "0xffffffff",
                    "0x4a4a",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x1400017a5",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x49f6",
                    "0xffffffff",
                    "0x4a51",
                    "0xfffffff9",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xfffffff9"
            },
            {
                "pc": "0x1400017f3",
                "api_name": "KERNEL32.LocalFree",
                "args": [
                    "0x49b0"
                ],
                "ret_val": "0x0"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf264",
            "address": "0xfeedf264",
            "instr": "disasm_failed",
            "regs": {
                "rsp": "0x0000000001211278",
                "rbp": "0x0000000001211338",
                "rip": "0x00000000feedf264",
                "rsi": "0x0000000000000003",
                "rdi": "0x000000000000003a",
                "rax": "0x0000000000000000",
                "rbx": "0x000000000000003a",
                "rcx": "0x00000001411deee0",
                "rdx": "0x00000000000000c8",
                "r8": "0x00000000000049f6",
                "r9": "0x00000000ffffffff",
                "r10": "0x0000000000000000",
                "r11": "0x0000000000000000",
                "r12": "0x0000000000000003",
                "r13": "0x0000000000004a10",
                "r14": "0x0000000000004a10",
                "r15": "0x00000000000049b0"
            },
            "stack": [
                "sp+0x00: 0x0000000140001805 -> emu.module.8aa536f0aebe9b8209e666c3681677ba0bfecf7ceabeef0804c6c94007d8c1d9.0x140000000",
                "sp+0x08: 0x0000000000000000",
                "sp+0x10: 0x0000000000000000",
                "sp+0x18: 0x0000000000000000",
                "sp+0x20: 0x0000000000000000",
                "sp+0x28: 0x0000000000004a51",
                "sp+0x30: 0x00000000fffffff9",
                "sp+0x38: 0x0000000000000000",
                "sp+0x40: 0x0000000000000000",
                "sp+0x48: 0x0000000000000000",
                "sp+0x50: 0x0000000000000000",
                "sp+0x58: 0x0000000000000000",
                "sp+0x60: 0x0000000000000000",
                "sp+0x68: 0x0000000000000000",
                "sp+0x70: 0x0000000000000000",
                "sp+0x78: 0x0000000000000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 5820, in GetConsoleTitle\n    self.mem_write(nSize, (len(temp_title)).to_bytes(4, 'little'))\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]