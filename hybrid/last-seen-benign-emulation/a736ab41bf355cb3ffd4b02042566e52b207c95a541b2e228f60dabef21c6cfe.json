[
    {
        "ep_type": "module_entry",
        "start_addr": "0x4012fb",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "4bbc107c1515cbb0bbbd6517ebab7d7b8413cc0bdf2826e576b253a9c357f1ed",
        "apis": [
            {
                "pc": "0x401c09",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x401c15",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x1fc0"
            },
            {
                "pc": "0x401c1d",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x1fd4"
            },
            {
                "pc": "0x401c25",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x401c31",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fd0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4010fd",
                "api_name": "KERNEL32.InterlockedCompareExchange",
                "args": [
                    "0x419634",
                    "0x1212000",
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401b9f",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x4012ad",
                "api_name": "msvcrt.__set_app_type",
                "args": [
                    "0x1"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4012c3",
                "api_name": "msvcrt.__p__fmode",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x4012d1",
                "api_name": "msvcrt.__p__commode",
                "args": [],
                "ret_val": "0x4600"
            },
            {
                "pc": "0x401b2e",
                "api_name": "msvcrt._controlfp",
                "args": [
                    "0x10000",
                    "0x30000"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x410eb0",
                "api_name": "KERNEL32.IsProcessorFeaturePresent",
                "args": [
                    "PF_XMMI64_INSTRUCTIONS_AVAILABLE"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4019a0",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x401952"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401183",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x412290",
                    "0x4122a0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40119c",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x419634",
                    "0x0"
                ],
                "ret_val": "0x1212000"
            },
            {
                "pc": "0x4063b3",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x4063bc",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "ntdll.dll"
                ],
                "ret_val": "0x7c000000"
            },
            {
                "pc": "0x4063cc",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetSystemTimes"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x4063d7",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "IsWow64Process"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x4063e2",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x7c000000",
                    "NtQuerySystemInformation"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x4063ec",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "QueryFullProcessImageNameW"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x4063f7",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "GetProcessImageFileNameW"
                ],
                "ret_val": "0xfeee0004"
            },
            {
                "pc": "0x406c92",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x2000",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x50000"
            },
            {
                "pc": "0x406ca4",
                "api_name": "ntdll.NtQuerySystemInformation",
                "args": [
                    "0x5",
                    "0x50000",
                    "0x2000",
                    "0x1211ce8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x41067d",
                "api_name": "msvcrt.??2@YAPAXI@Z",
                "args": [],
                "ret_val": null
            }
        ],
        "ret_val": "0x30",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf258",
            "address": "0xfeedf258",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211cac",
                "ebp": "0x00000010",
                "eip": "0xfeedf258",
                "esi": "0x00000020",
                "edi": "0x01211d24",
                "eax": "0x00000030",
                "ebx": "0x00000007",
                "ecx": "0x01211d24",
                "edx": "0x000500b8"
            },
            "stack": [
                "sp+0x00: 0x00404f32 -> emu.module.a736ab41bf355cb3ffd4b02042566e52b207c95a541b2e228f60dabef21c6cfe.0x400000",
                "sp+0x04: 0x00000030",
                "sp+0x08: 0x000500b8 -> api.VirtualAlloc.0x50000",
                "sp+0x0c: 0x00000020",
                "sp+0x10: 0x00050000 -> api.VirtualAlloc.0x50000",
                "sp+0x14: 0x00050000 -> api.VirtualAlloc.0x50000",
                "sp+0x18: 0x01211d04 -> emu.stack.0x1200000",
                "sp+0x1c: 0x01211dc4 -> emu.stack.0x1200000",
                "sp+0x20: 0x00406d1a -> emu.module.a736ab41bf355cb3ffd4b02042566e52b207c95a541b2e228f60dabef21c6cfe.0x400000",
                "sp+0x24: 0x000500b8 -> api.VirtualAlloc.0x50000",
                "sp+0x28: 0x00000030",
                "sp+0x2c: 0x427f0bf4",
                "sp+0x30: 0x00000001",
                "sp+0x34: 0x01211e64 -> emu.stack.0x1200000",
                "sp+0x38: 0x01211e40 -> emu.stack.0x1200000",
                "sp+0x3c: 0x000008f2"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/msvcrt.py\", line 802, in memcpy\n    self.mem_write(dest, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]