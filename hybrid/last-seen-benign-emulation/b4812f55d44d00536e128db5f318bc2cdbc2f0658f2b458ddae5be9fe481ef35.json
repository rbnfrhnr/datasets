[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0x474ee0",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0x90caea",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x175295c"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0x474f60",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x401300",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "2a7be34574d65f7a33d90a5edcdbd1f795b252e4e0616cf951a776b78b89686a",
        "apis": [
            {
                "pc": "0x4011ab",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x13b1674",
                    "0x13b167c"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4011c7",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x13b1660",
                    "0x13b1668"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401202",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x475480"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40122f",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x4"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x401319",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x474df0"
                ],
                "ret_val": "0x474df0"
            },
            {
                "pc": "0x47ae02",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x47ae18",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "InitializeConditionVariable"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x47ae37",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "WakeAllConditionVariable"
                ],
                "ret_val": "0xfeee0001"
            },
            {
                "pc": "0x47ae4c",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "WakeConditionVariable"
                ],
                "ret_val": "0xfeee0002"
            },
            {
                "pc": "0x47ae61",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "SleepConditionVariableCS"
                ],
                "ret_val": "0xfeee0003"
            },
            {
                "pc": "0x47ae7e",
                "api_name": "KERNEL32.InitializeCriticalSectionAndSpinCount",
                "args": [
                    "0x13b4210",
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x401319",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x418650"
                ],
                "ret_val": "0x418650"
            },
            {
                "pc": "0x401602",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x4620"
            },
            {
                "pc": "0x401610",
                "api_name": "SHELL32.CommandLineToArgvW",
                "args": [
                    "0x4620",
                    "0x2d4dfc4"
                ],
                "ret_val": "0x4660"
            },
            {
                "pc": "0x401664",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4670",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xc"
            },
            {
                "pc": "0x401664",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4688",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x401664",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4696",
                    "0xffffffff",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x401679",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x2a"
                ],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x4016bc",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4670",
                    "0xffffffff",
                    "0x46c0",
                    "0x1a",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x1a"
            },
            {
                "pc": "0x4016bc",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4688",
                    "0xffffffff",
                    "0x46da",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x7"
            },
            {
                "pc": "0x4016bc",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0xfde9",
                    "0x0",
                    "0x4696",
                    "0xffffffff",
                    "0x46e1",
                    "0xfffffff9",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0xfffffff9"
            },
            {
                "pc": "0x401719",
                "api_name": "KERNEL32.LocalFree",
                "args": [
                    "0x4660"
                ],
                "ret_val": "0x0"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf268",
            "address": "0xfeedf268",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x02d4d37c",
                "ebp": "0x02d4dfbc",
                "eip": "0xfeedf268",
                "esi": "0x0000002a",
                "edi": "0x0000002a",
                "eax": "0x00000000",
                "ebx": "0x00000003",
                "ecx": "0x000046b0",
                "edx": "0x00000078"
            },
            "stack": [
                "sp+0x00: 0x0040172c -> emu.module.b4812f55d44d00536e128db5f318bc2cdbc2f0658f2b458ddae5be9fe481ef35.0x400000",
                "sp+0x04: 0x013b3004 -> emu.module.b4812f55d44d00536e128db5f318bc2cdbc2f0658f2b458ddae5be9fe481ef35.0x400000",
                "sp+0x08: 0x000000c8",
                "sp+0x0c: 0x00004696 -> api.CommandLineToArgv.0x4660",
                "sp+0x10: 0xffffffff",
                "sp+0x14: 0x000046e1",
                "sp+0x18: 0xfffffff9",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 5820, in GetConsoleTitle\n    self.mem_write(nSize, (len(temp_title)).to_bytes(4, 'little'))\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]