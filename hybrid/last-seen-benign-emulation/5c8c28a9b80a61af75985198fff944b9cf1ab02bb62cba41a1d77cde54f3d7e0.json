[
    {
        "ep_type": "module_entry",
        "start_addr": "0x41250a",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "d8127c50f8d264a538646cb1a2cef8fe7447c3589f7afdbe77f19f6b9bcc9919",
        "apis": [
            {
                "pc": "0x412530",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x1211ed4"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x41257f",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x417b43",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x1",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x412729",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x100"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x416bcc",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211e8c"
                ],
                "ret_val": null
            },
            {
                "pc": "0x416ccc",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x416cda",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x416ccc",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x416cda",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x416ccc",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x416cda",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x416d11",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x417a88",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x47a0"
            },
            {
                "pc": "0x417aba",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x47a0"
            },
            {
                "pc": "0x41080e",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x410829",
                "api_name": "kernel32.GetFileAttributesW",
                "args": [
                    "???.???"
                ],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x410834",
                "api_name": "KERNEL32.GetLastError",
                "args": [],
                "ret_val": "0x6"
            },
            {
                "pc": "0x410575",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "unicows.dll"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4106ee",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "advapi32.dll"
                ],
                "ret_val": "0x78000000"
            },
            {
                "pc": "0x4106fc",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x42507c",
                    "0x78000000"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x410774",
                "api_name": "advapi32.RegOpenKeyExA",
                "args": [
                    "HKEY_LOCAL_MACHINE",
                    "SOFTWARE\\Microsoft\\Windows\\CurrentVersion",
                    "0x0",
                    "0x1",
                    "0x1211e80"
                ],
                "ret_val": "0x3"
            },
            {
                "pc": "0x4108ab",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x425c5c",
                    "0x4109cc"
                ],
                "ret_val": "0x41d581"
            },
            {
                "pc": "0x4109d4",
                "api_name": "KERNEL32.SetLastError",
                "args": [
                    "0x78"
                ],
                "ret_val": null
            },
            {
                "pc": "0x41793e",
                "api_name": "KERNEL32.GetLastError",
                "args": [],
                "ret_val": "0x78"
            }
        ],
        "ret_val": "0x2",
        "error": {
            "type": "Failed to get character width from function: KERNEL32.GetEnvironmentStrings",
            "pc": "0xfeedf0b8",
            "address": "0xfeedf0b8",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211eb4",
                "ebp": "0x0041d581",
                "eip": "0xfeedf0b8",
                "esi": "0x00000000",
                "edi": "0x00000000",
                "eax": "0x00000002",
                "ebx": "0x00000000",
                "ecx": "0x0000074b",
                "edx": "0x00000700"
            },
            "stack": [
                "sp+0x00: 0x004179be -> emu.module.5c8c28a9b80a61af75985198fff944b9cf1ab02bb62cba41a1d77cde54f3d7e0.0x400000",
                "sp+0x04: 0xfeedf034",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x01211fe4 -> emu.stack.0x1200000",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00004710 -> api.heap.HeapAlloc.0x4610",
                "sp+0x18: 0x00004710 -> api.heap.HeapAlloc.0x4610",
                "sp+0x1c: 0x00412625 -> emu.module.5c8c28a9b80a61af75985198fff944b9cf1ab02bb62cba41a1d77cde54f3d7e0.0x400000",
                "sp+0x20: 0x00000094",
                "sp+0x24: 0x00000006",
                "sp+0x28: 0x00000001",
                "sp+0x2c: 0x00001db1 -> emu.gdt.0x1000",
                "sp+0x30: 0x00000002",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2458, in GetEnvironmentStrings\n    cw = self.get_char_width(ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 343, in get_char_width\n    raise ApiEmuError('Failed to get character width from function: %s' % (name))\nspeakeasy.errors.ApiEmuError: Failed to get character width from function: KERNEL32.GetEnvironmentStrings\n"
        },
        "registry_access": [
            {
                "event": "open_key",
                "path": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion"
            }
        ],
        "dynamic_code_segments": []
    }
]