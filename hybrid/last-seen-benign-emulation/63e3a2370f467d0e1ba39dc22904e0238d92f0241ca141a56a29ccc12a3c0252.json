[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0xbcd1e0",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0xbcdc4d",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x128e00c"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0xbcd190",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x4014b0",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "a0a41d51428ae4fe79aa499890a899f72183d9a85395384dba95d9bed9c08973",
        "apis": [
            {
                "pc": "0x40147e",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x129200c",
                    "0x1292014"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401411",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x1292000",
                    "0x1292008"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40123e",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0xbcd850"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401266",
                "api_name": "msvcrt.__p__acmdln",
                "args": [],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x4012f0",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x4"
                ],
                "ret_val": "0x4630"
            },
            {
                "pc": "0x4014f6",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "libgcc_s_dw2-1.dll"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4014cf",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x401580"
                ],
                "ret_val": "0x401580"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0xbcd850",
            "address": "0xbcd850",
            "instr": "push ebx",
            "regs": {
                "esp": "0x0169be5c",
                "ebp": "0x01255ba0",
                "eip": "0x00bcd850",
                "esi": "0x00000004",
                "edi": "0x02182200",
                "eax": "0x00000000",
                "ebx": "0x00000800",
                "ecx": "0x02182200",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0xfeedf000",
                "sp+0x04: 0x00004640 -> emu.struct.EXCEPTION_POINTERS.0x4640",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x00000000",
                "sp+0x10: 0x00437067 -> emu.module.63e3a2370f467d0e1ba39dc22904e0238d92f0241ca141a56a29ccc12a3c0252.0x400000",
                "sp+0x14: 0x00bce100 -> emu.module.63e3a2370f467d0e1ba39dc22904e0238d92f0241ca141a56a29ccc12a3c0252.0x400000",
                "sp+0x18: 0xfffffff4",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x0045b860 -> emu.module.63e3a2370f467d0e1ba39dc22904e0238d92f0241ca141a56a29ccc12a3c0252.0x400000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]