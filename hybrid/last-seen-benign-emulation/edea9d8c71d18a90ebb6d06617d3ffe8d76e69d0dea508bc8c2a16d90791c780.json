[
    {
        "ep_type": "module_entry",
        "start_addr": "0x429fe6",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "0fd4d6a27dc5c95195d31a962f31a5043b643b3bcd546bf5e907f5ffed9a5455",
        "apis": [
            {
                "pc": "0x42a012",
                "api_name": "KERNEL32.GetVersion",
                "args": [],
                "ret_val": "0x1db10106"
            },
            {
                "pc": "0x42ed62",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x0",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x42ec28",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x1211ec8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4344b9",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x464648"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4344c1",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x464678"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4344c9",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x464660"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4344d1",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x464630"
                ],
                "ret_val": null
            },
            {
                "pc": "0x42ea74",
                "api_name": "KERNEL32.TlsAlloc",
                "args": [],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4346a9",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x80"
                ],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x42ea9c",
                "api_name": "KERNEL32.TlsSetValue",
                "args": [
                    "0x0",
                    "0x4610"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x42eaad",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0xd058"
            },
            {
                "pc": "0x42b327",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x480"
                ],
                "ret_val": "0x46a0"
            },
            {
                "pc": "0x42e910",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f20"
                ],
                "ret_val": null
            },
            {
                "pc": "0x42ea1e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x42ea2c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x42ea1e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x42ea2c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x42ea1e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x42ea2c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x42ea63",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x42e826",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x4bb0"
            },
            {
                "pc": "0x42e84f",
                "api_name": "KERNEL32.GetCommandLineW",
                "args": [],
                "ret_val": "0x4bb0"
            },
            {
                "pc": "0x406d10",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x406d2b",
                "api_name": "kernel32.GetFileAttributesW",
                "args": [
                    "???.???"
                ],
                "ret_val": "0xffffffff"
            },
            {
                "pc": "0x406d36",
                "api_name": "KERNEL32.GetLastError",
                "args": [],
                "ret_val": "0x6"
            },
            {
                "pc": "0x406b83",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "unicows.dll"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x406dad",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x45fbf8",
                    "0x406edd"
                ],
                "ret_val": "0x43957a"
            },
            {
                "pc": "0x406ee5",
                "api_name": "KERNEL32.SetLastError",
                "args": [
                    "0x78"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Failed to get character width from function: KERNEL32.GetEnvironmentStrings",
            "pc": "0xfeedf138",
            "address": "0xfeedf138",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211f54",
                "ebp": "0x00000000",
                "eip": "0xfeedf138",
                "esi": "0x00000000",
                "edi": "0x0043957a",
                "eax": "0x00000000",
                "ebx": "0xfeedf138",
                "ecx": "0x00001ed0",
                "edx": "0x00001e00"
            },
            "stack": [
                "sp+0x00: 0x0042e6d2 -> emu.module.edea9d8c71d18a90ebb6d06617d3ffe8d76e69d0dea508bc8c2a16d90791c780.0x400000",
                "sp+0x04: 0x00000000",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x01211fe4 -> emu.stack.0x1200000",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x000046a0 -> api.heap.HeapAlloc.0x46a0",
                "sp+0x18: 0x0042a07b -> emu.module.edea9d8c71d18a90ebb6d06617d3ffe8d76e69d0dea508bc8c2a16d90791c780.0x400000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 2458, in GetEnvironmentStrings\n    cw = self.get_char_width(ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 343, in get_char_width\n    raise ApiEmuError('Failed to get character width from function: %s' % (name))\nspeakeasy.errors.ApiEmuError: Failed to get character width from function: KERNEL32.GetEnvironmentStrings\n"
        },
        "dynamic_code_segments": []
    }
]