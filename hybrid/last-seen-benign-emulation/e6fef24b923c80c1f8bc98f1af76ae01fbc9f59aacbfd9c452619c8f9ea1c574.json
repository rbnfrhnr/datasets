[
    {
        "ep_type": "module_entry",
        "start_addr": "0xc6cbf7",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "1c28c4b3469bd4d07ef6fe1617284b73e2f587b87dbdf8c4d8dec791a4c8ee1b",
        "apis": [
            {
                "pc": "0xc6ddba",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x169bfc8"
                ],
                "ret_val": null
            },
            {
                "pc": "0xc6ddc9",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x185c"
            },
            {
                "pc": "0xc6ddd2",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x1848"
            },
            {
                "pc": "0xc6dddf",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x169bfc0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0xc6d8fd",
                "api_name": "KERNEL32.IsProcessorFeaturePresent",
                "args": [
                    "PF_XMMI64_INSTRUCTIONS_AVAILABLE"
                ],
                "ret_val": "0x1"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0xc6daac",
            "address": "0xc6daac",
            "instr": "push ebp",
            "regs": {
                "esp": "0x0169bf90",
                "ebp": "0x0169c000",
                "eip": "0x00c6daac",
                "esi": "0x00000000",
                "edi": "0x00000000",
                "eax": "0x00000000",
                "ebx": "0xffffffff",
                "ecx": "0x00000001",
                "edx": "0x0169bfe4"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00004600 -> emu.struct.EXCEPTION_RECORD.0x4600",
                "sp+0x08: 0x0169bfd4 -> emu.stack.0x168a000",
                "sp+0x0c: 0x00004660 -> emu.struct.EXCEPTION_CONTEXT.0x4660",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00c6ca8e -> emu.module.e6fef24b923c80c1f8bc98f1af76ae01fbc9f59aacbfd9c452619c8f9ea1c574.0x400000",
                "sp+0x18: 0x00e5f408 -> emu.module.e6fef24b923c80c1f8bc98f1af76ae01fbc9f59aacbfd9c452619c8f9ea1c574.0x400000",
                "sp+0x1c: 0x00e5f418 -> emu.module.e6fef24b923c80c1f8bc98f1af76ae01fbc9f59aacbfd9c452619c8f9ea1c574.0x400000",
                "sp+0x20: 0x63bbaab2",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0xd27d5700",
                "sp+0x34: 0x0000005f",
                "sp+0x38: 0x001c4e00",
                "sp+0x3c: 0x0169bfb0 -> emu.stack.0x168a000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0xf9a7a0",
                "instr": "and dword ptr [edi], esp",
                "exception_code": "0xc0000005",
                "handler_address": "0xc6daac",
                "registers": {
                    "esp": "0x0169bf90",
                    "ebp": "0x0169c000",
                    "eip": "0x00f9a7a0",
                    "esi": "0x00000000",
                    "edi": "0x00000000",
                    "eax": "0x00000000",
                    "ebx": "0x00000000",
                    "ecx": "0x00000001",
                    "edx": "0x0169bfe4"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]