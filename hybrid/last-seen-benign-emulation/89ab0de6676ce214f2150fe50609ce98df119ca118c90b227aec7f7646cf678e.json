[
    {
        "ep_type": "module_entry",
        "start_addr": "0x30002045",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "4b0a75e64cfc24e762a0a2a403b3b3d40b783e5f4239a3f729dce49a17f00c48",
        "apis": [
            {
                "pc": "0x30001c8f",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x30001c96",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "HeapSetInformation"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x30001ca8",
                "api_name": "KERNEL32.GetProcessHeap",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x30001cab",
                "api_name": "kernel32.HeapSetInformation",
                "args": [
                    "0x45f0",
                    "0x1",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x30001cb5",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd4"
                ],
                "ret_val": null
            },
            {
                "pc": "0x30001cc1",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x948c"
            },
            {
                "pc": "0x30001cc9",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x94a0"
            },
            {
                "pc": "0x30001cd1",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x30001cdd",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fcc"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x30001cfb",
                "api_name": "KERNEL32.VirtualProtect",
                "args": [
                    "0x300013fc",
                    "0x4",
                    "0x40",
                    "0x1211fdc"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x30001d1b",
                "api_name": "KERNEL32.VirtualProtect",
                "args": [
                    "0x300013fc",
                    "0x4",
                    "0x40",
                    "0x1211fdc"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x30001da0",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f7c"
                ],
                "ret_val": null
            },
            {
                "pc": "0x30001dc6",
                "api_name": "KERNEL32.InterlockedCompareExchange",
                "args": [
                    "0x300033a4",
                    "0x1212000",
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x30001e16",
                "api_name": "MSVCR90._initterm_e",
                "args": [
                    "0x30001108",
                    "0x30001114"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x30001e3f",
                "api_name": "MSVCR90._initterm",
                "args": [
                    "0x300010fc",
                    "0x30001104"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x30001e57",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x300033a4",
                    "0x0"
                ],
                "ret_val": "0x1212000"
            }
        ],
        "ret_val": "0xfeedf0d4",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x300020a3",
            "address": "0x300020a3",
            "instr": "mov edi, edi",
            "regs": {
                "esp": "0x01211f58",
                "ebp": "0x01211fe4",
                "eip": "0x300020a3",
                "esi": "0x00000000",
                "edi": "0x300033a4",
                "eax": "0xfeedf0d4",
                "ebx": "0xffffffff",
                "ecx": "0x30001104",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x000046a0 -> emu.struct.EXCEPTION_RECORD.0x46a0",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00004700 -> emu.struct.EXCEPTION_CONTEXT.0x4700",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0xfccb642e",
                "sp+0x18: 0x00000000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000044",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00004610 -> api.struct.STARTUPINFOA.lpDesktop.0x4610",
                "sp+0x30: 0x00004630 -> api.struct.STARTUPINFOA.lpTitle.0x4630",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x30001e85",
                "instr": "mov al, byte ptr [esi]",
                "exception_code": "0xc0000005",
                "handler_address": "0x300020a3",
                "registers": {
                    "esp": "0x01211f58",
                    "ebp": "0x01211fe4",
                    "eip": "0x30001e85",
                    "esi": "0x00000000",
                    "edi": "0x300033a4",
                    "eax": "0xfeedf0d4",
                    "ebx": "0x00000000",
                    "ecx": "0x30001104",
                    "edx": "0x00000000"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]