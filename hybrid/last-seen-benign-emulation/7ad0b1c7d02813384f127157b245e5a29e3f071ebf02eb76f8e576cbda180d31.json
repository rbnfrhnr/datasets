[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0x403d60",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0x404f1d",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x7533e0"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0x403d30",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x4014d0",
        "ep_args": [
            "0x4030",
            "0x4040",
            "0x4050",
            "0x4060"
        ],
        "apihash": "4a20100b0a5cdc6e53f8526ddcbeb5c254589dccbf28c579bc285bdbbdbc57b1",
        "apis": [
            {
                "pc": "0x404b8b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211f38"
                ],
                "ret_val": null
            },
            {
                "pc": "0x404b96",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x170c"
            },
            {
                "pc": "0x404b9e",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x1720"
            },
            {
                "pc": "0x404ba6",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x404bb3",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211f48"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40148d",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x755018",
                    "0x755030"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401440",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x755000",
                    "0x755010"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4045de",
                "api_name": "KERNEL32.VirtualQuery",
                "args": [
                    "0x401000",
                    "0x1211ca8",
                    "0x30"
                ],
                "ret_val": "0x30"
            },
            {
                "pc": "0x404609",
                "api_name": "KERNEL32.VirtualQuery",
                "args": [
                    "0x40126f",
                    "0x1211ca8",
                    "0x30"
                ],
                "ret_val": "0x30"
            },
            {
                "pc": "0x404a3a",
                "api_name": "msvcrt.memcpy",
                "args": [
                    "0x40126f",
                    "0x1211e48",
                    "0x4"
                ],
                "ret_val": "0x40126f"
            },
            {
                "pc": "0x40125b",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x404190"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x404fdf",
                "api_name": "msvcrt.strlen",
                "args": [
                    ".pdata"
                ],
                "ret_val": "0x6"
            },
            {
                "pc": "0x40506a",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".text",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40506a",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".data",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40506a",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".rdata",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40506a",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".pdata",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401324",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x8"
                ],
                "ret_val": "0x4990"
            },
            {
                "pc": "0x403e39",
                "api_name": "msvcrt._lock",
                "args": [
                    "0x8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x403e6d",
                "api_name": "msvcrt.__dllonexit",
                "args": [
                    "0x404a80",
                    "0x1211e68",
                    "0x1211e70"
                ],
                "ret_val": "0x404a80"
            },
            {
                "pc": "0x403e9c",
                "api_name": "msvcrt._unlock",
                "args": [
                    "0x8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4024c7",
                "api_name": "msvcrt.strlen",
                "args": [
                    "1"
                ],
                "ret_val": "0x1"
            }
        ],
        "ret_val": "0x0",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x404190",
            "address": "0x404190",
            "instr": "push rsi",
            "regs": {
                "rsp": "0x0000000001211d00",
                "rbp": "0x0000000000000001",
                "rip": "0x0000000000404190",
                "rsi": "0x0000000000000000",
                "rdi": "0x000000000073905e",
                "rax": "0x0000000000000000",
                "rbx": "0x0000000000739106",
                "rcx": "0x00000000000049a0",
                "rdx": "0x0000000001211d54",
                "r8": "0x0000000000000000",
                "r9": "0x0000000000400318",
                "r10": "0xffffffff00337835",
                "r11": "0x0000000000000000",
                "r12": "0x0000000000000000",
                "r13": "0x00000000feedf040",
                "r14": "0x0000000000000000",
                "r15": "0x0000000000000000"
            },
            "stack": [
                "sp+0x00: 0x00000000feedf000",
                "sp+0x08: 0x000000000073905e -> emu.module.7ad0b1c7d02813384f127157b245e5a29e3f071ebf02eb76f8e576cbda180d31.0x400000",
                "sp+0x10: 0x0000000000000001",
                "sp+0x18: 0x0000000000004990 -> api.heap.HeapAlloc.0x4990",
                "sp+0x20: 0x00000000004024d7 -> emu.module.7ad0b1c7d02813384f127157b245e5a29e3f071ebf02eb76f8e576cbda180d31.0x400000",
                "sp+0x28: 0x0000000000000000",
                "sp+0x30: 0x0000000000000000",
                "sp+0x38: 0x0000000000004990 -> api.heap.HeapAlloc.0x4990",
                "sp+0x40: 0x0000000000402449 -> emu.module.7ad0b1c7d02813384f127157b245e5a29e3f071ebf02eb76f8e576cbda180d31.0x400000",
                "sp+0x48: 0x0000000000400188 -> emu.module.7ad0b1c7d02813384f127157b245e5a29e3f071ebf02eb76f8e576cbda180d31.0x400000",
                "sp+0x50: 0x0000000000000000",
                "sp+0x58: 0x0000000001211dc4 -> emu.stack.0x1200000",
                "sp+0x60: 0x0000000001211dda -> emu.stack.0x1200000",
                "sp+0x68: 0x00000000007390fc -> emu.module.7ad0b1c7d02813384f127157b245e5a29e3f071ebf02eb76f8e576cbda180d31.0x400000",
                "sp+0x70: 0x0000000000000000",
                "sp+0x78: 0x0000000000004990 -> api.heap.HeapAlloc.0x4990"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]