[
    {
        "ep_type": "module_entry",
        "start_addr": "0x4013c0",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "5ad0ae4e3cecd9f0c8a201b0b42e0e3e081761854b9b920c157415c62dbfe6e8",
        "apis": [
            {
                "pc": "0x40174b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211fd8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x401757",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x1ea0"
            },
            {
                "pc": "0x40175f",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x1eb4"
            },
            {
                "pc": "0x401767",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x401773",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211fd0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4011c2",
                "api_name": "KERNEL32.InterlockedCompareExchange",
                "args": [
                    "0x442170",
                    "0x1212000",
                    "0x0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4016e1",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "0x0"
                ],
                "ret_val": "0x400000"
            },
            {
                "pc": "0x401372",
                "api_name": "msvcrt.__set_app_type",
                "args": [
                    "0x1"
                ],
                "ret_val": null
            },
            {
                "pc": "0x401388",
                "api_name": "msvcrt.__p__fmode",
                "args": [],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x401396",
                "api_name": "msvcrt.__p__commode",
                "args": [],
                "ret_val": "0x4600"
            },
            {
                "pc": "0x401670",
                "api_name": "msvcrt._controlfp",
                "args": [
                    "0x10000",
                    "0x30000"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401560",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x401512"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401248",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x43123c",
                    "0x43127c"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401261",
                "api_name": "KERNEL32.InterlockedExchange",
                "args": [
                    "0x442170",
                    "0x0"
                ],
                "ret_val": "0x1212000"
            },
            {
                "pc": "0x404157",
                "api_name": "msvcrt.memmove",
                "args": [
                    "0x1211e5c",
                    "0x435e30",
                    "0xa"
                ],
                "ret_val": "0x1211e5c"
            },
            {
                "pc": "0x429dbd",
                "api_name": "msvcrt.??2@YAPAXI@Z",
                "args": [],
                "ret_val": null
            }
        ],
        "ret_val": "0x20",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf100",
            "address": "0xfeedf100",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211e14",
                "ebp": "0x0000000c",
                "eip": "0xfeedf100",
                "esi": "0x00000018",
                "edi": "0x01211e40",
                "eax": "0x00000020",
                "ebx": "0x00000007",
                "ecx": "0x01211e40",
                "edx": "0x00000120"
            },
            "stack": [
                "sp+0x00: 0x004041d2 -> emu.module.9fe87f9544b4d2fa8132b5585bfad27eb4bf4c864e9f92dc2a379cbd281b2504.0x400000",
                "sp+0x04: 0x00000020",
                "sp+0x08: 0x00435e3c -> emu.module.9fe87f9544b4d2fa8132b5585bfad27eb4bf4c864e9f92dc2a379cbd281b2504.0x400000",
                "sp+0x0c: 0x00000018",
                "sp+0x10: 0x00442170 -> emu.module.9fe87f9544b4d2fa8132b5585bfad27eb4bf4c864e9f92dc2a379cbd281b2504.0x400000",
                "sp+0x14: 0x00000001",
                "sp+0x18: 0x01211fa0 -> emu.stack.0x1200000",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x0041c7e3 -> emu.module.9fe87f9544b4d2fa8132b5585bfad27eb4bf4c864e9f92dc2a379cbd281b2504.0x400000",
                "sp+0x24: 0x00435e3c -> emu.module.9fe87f9544b4d2fa8132b5585bfad27eb4bf4c864e9f92dc2a379cbd281b2504.0x400000",
                "sp+0x28: 0x00000020",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000001",
                "sp+0x34: 0x01211fa0 -> emu.stack.0x1200000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x0000000c"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/msvcrt.py\", line 802, in memcpy\n    self.mem_write(dest, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]