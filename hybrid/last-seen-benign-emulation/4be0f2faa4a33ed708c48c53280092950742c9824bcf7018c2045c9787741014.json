[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0x401bb0",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0x4025ad",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x40f094"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0x401b60",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x4014c0",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "a0a41d51428ae4fe79aa499890a899f72183d9a85395384dba95d9bed9c08973",
        "apis": [
            {
                "pc": "0x40148e",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x41100c",
                    "0x411018"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401419",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x411000",
                    "0x411008"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x40124e",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x4021a0"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401276",
                "api_name": "msvcrt.__p__acmdln",
                "args": [],
                "ret_val": "0x4610"
            },
            {
                "pc": "0x401300",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x4"
                ],
                "ret_val": "0x4630"
            },
            {
                "pc": "0x401506",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "libgcc_s_dw2-1.dll"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x4014df",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x4015a0"
                ],
                "ret_val": "0x4015a0"
            },
            {
                "pc": "0x4014df",
                "api_name": "msvcrt._onexit",
                "args": [
                    "0x401a80"
                ],
                "ret_val": "0x401a80"
            }
        ],
        "ret_val": "0x1",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0xfeedf10c",
            "address": "0xfeedf10c",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211e7c",
                "ebp": "0x01211f48",
                "eip": "0xfeedf10c",
                "esi": "0x00004630",
                "edi": "0x00000000",
                "eax": "0x00000001",
                "ebx": "0x00004630",
                "ecx": "0x00000000",
                "edx": "0xfeedf06c"
            },
            "stack": [
                "sp+0x00: 0x004018f4 -> emu.module.4be0f2faa4a33ed708c48c53280092950742c9824bcf7018c2045c9787741014.0x400000",
                "sp+0x04: 0x00000000",
                "sp+0x08: 0x00000000",
                "sp+0x0c: 0x00000000",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00004630 -> api.heap.HeapAlloc.0x4630",
                "sp+0x18: 0x00000000",
                "sp+0x1c: 0x01212000",
                "sp+0x20: 0x00409272 -> emu.module.4be0f2faa4a33ed708c48c53280092950742c9824bcf7018c2045c9787741014.0x400000",
                "sp+0x24: 0x00004630 -> api.heap.HeapAlloc.0x4630",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/msvcrt.py\", line 1095, in strlen\n    string = self.read_mem_string(s, 1)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 158, in read_mem_string\n    string = self.emu.read_mem_string(addr, width=width)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/binemu.py\", line 715, in read_mem_string\n    char = self.mem_read(address, width)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 250, in mem_read\n    return bytes(self.emu_eng.mem_read(addr, size))\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 171, in mem_read\n    return self.emu.mem_read(addr, size)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 436, in mem_read\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]