[
    {
        "ep_type": "module_entry",
        "start_addr": "0x407fe0",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "2b7eb657d5855f94ecf560122487ce9a55f08bf100152ed8550acede736a7655",
        "apis": [
            {
                "pc": "0x40800c",
                "api_name": "KERNEL32.GetVersion",
                "args": [],
                "ret_val": "0x1db10106"
            },
            {
                "pc": "0x40accf",
                "api_name": "KERNEL32.HeapCreate",
                "args": [
                    "0x1",
                    "0x1000",
                    "0x0"
                ],
                "ret_val": "0x45f0"
            },
            {
                "pc": "0x40c0d7",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x0",
                    "0x400000",
                    "0x2000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x450000"
            },
            {
                "pc": "0x40c0f0",
                "api_name": "KERNEL32.VirtualAlloc",
                "args": [
                    "0x450000",
                    "0x10000",
                    "0x1000",
                    "PAGE_READWRITE"
                ],
                "ret_val": "0x450000"
            },
            {
                "pc": "0x40ab2b",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211f70"
                ],
                "ret_val": null
            },
            {
                "pc": "0x40ac5e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff6"
                ],
                "ret_val": "0xf001"
            },
            {
                "pc": "0x40ac6c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf001"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40ac5e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff5"
                ],
                "ret_val": "0xf002"
            },
            {
                "pc": "0x40ac6c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf002"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40ac5e",
                "api_name": "KERNEL32.GetStdHandle",
                "args": [
                    "0xfffffff4"
                ],
                "ret_val": "0xf003"
            },
            {
                "pc": "0x40ac6c",
                "api_name": "KERNEL32.GetFileType",
                "args": [
                    "0xf003"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40acb0",
                "api_name": "KERNEL32.SetHandleCount",
                "args": [
                    "0x20"
                ],
                "ret_val": "0x20"
            },
            {
                "pc": "0x40a7f1",
                "api_name": "KERNEL32.GetACP",
                "args": [],
                "ret_val": "0x4e4"
            },
            {
                "pc": "0x40a848",
                "api_name": "KERNEL32.GetCPInfo",
                "args": [
                    "0x4e4",
                    "0x1211f98"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x408061",
                "api_name": "KERNEL32.GetCommandLineA",
                "args": [],
                "ret_val": "0x4690"
            },
            {
                "pc": "0x40a69f",
                "api_name": "KERNEL32.GetEnvironmentStringsW",
                "args": [],
                "ret_val": "0x46b0"
            },
            {
                "pc": "0x40a710",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x46b0",
                    "0x14b",
                    "0x0",
                    "0x0",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x14b"
            },
            {
                "pc": "0x40a737",
                "api_name": "KERNEL32.WideCharToMultiByte",
                "args": [
                    "0x0",
                    "0x0",
                    "0x46b0",
                    "0x14b",
                    "0x450200",
                    "0x14b",
                    "0x0",
                    "0x0"
                ],
                "ret_val": "0x14b"
            },
            {
                "pc": "0x40a74d",
                "api_name": "KERNEL32.FreeEnvironmentStringsW",
                "args": [
                    "0x46b0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40a3e7",
                "api_name": "KERNEL32.GetModuleFileNameA",
                "args": [
                    "0x0",
                    "C:\\Windows\\system32\\70bb32a92c73dc95aa2a261c3ef73c1fdf8da8cd8d0a29edbd0f9afd5772c5a6",
                    "0x104"
                ],
                "ret_val": "0x54"
            },
            {
                "pc": "0x408d9b",
                "api_name": "KERNEL32.GetModuleHandleA",
                "args": [
                    "KERNEL32"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x408dab",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "IsProcessorFeaturePresent"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x408db3",
                "api_name": "kernel32.IsProcessorFeaturePresent",
                "args": [
                    "PF_FLOATING_POINT_PRECISION_ERRATA"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40cc00",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x8",
                    "0x800"
                ],
                "ret_val": "0x7000"
            },
            {
                "pc": "0x4076bd",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x4176c0"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x40cb86",
                "api_name": "KERNEL32.HeapAlloc",
                "args": [
                    "0x45f0",
                    "0x0",
                    "0x1000"
                ],
                "ret_val": "0x8000"
            }
        ],
        "ret_val": "0x23370",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0x40adf8",
            "address": "0x40adf8",
            "instr": "push ebp",
            "regs": {
                "esp": "0x01211eec",
                "ebp": "0x01211f0c",
                "eip": "0x0040adf8",
                "esi": "0x00450350",
                "edi": "0x00000001",
                "eax": "0x00023370",
                "ebx": "0xffffffff",
                "ecx": "0x011fff08",
                "edx": "0x00450374"
            },
            "stack": [
                "sp+0x00: 0xfeedf004",
                "sp+0x04: 0x00007820 -> emu.struct.EXCEPTION_RECORD.0x7820",
                "sp+0x08: 0x01211fd4 -> emu.stack.0x1200000",
                "sp+0x0c: 0x00007880 -> emu.struct.EXCEPTION_CONTEXT.0x7880",
                "sp+0x10: 0x00000000",
                "sp+0x14: 0x00000000",
                "sp+0x18: 0x004040b0 -> emu.module.70bb32a92c73dc95aa2a261c3ef73c1fdf8da8cd8d0a29edbd0f9afd5772c5a6.0x400000",
                "sp+0x1c: 0x00403ef7 -> emu.module.70bb32a92c73dc95aa2a261c3ef73c1fdf8da8cd8d0a29edbd0f9afd5772c5a6.0x400000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00404013 -> emu.module.70bb32a92c73dc95aa2a261c3ef73c1fdf8da8cd8d0a29edbd0f9afd5772c5a6.0x400000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x01211fe4 -> emu.stack.0x1200000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00414f20 -> emu.module.70bb32a92c73dc95aa2a261c3ef73c1fdf8da8cd8d0a29edbd0f9afd5772c5a6.0x400000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 437, in start\n    count=self.max_instructions)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 203, in start\n    return self.emu.emu_start(addr, 0xFFFFFFFF, timeout=timeout, count=count)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 318, in emu_start\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "handled_exceptions": [
            {
                "pc": "0x407c47",
                "instr": "test dword ptr [ecx], eax",
                "exception_code": "0xc0000005",
                "handler_address": "0x40adf8",
                "registers": {
                    "esp": "0x01211eec",
                    "ebp": "0x01211f0c",
                    "eip": "0x00407c47",
                    "esi": "0x00450350",
                    "edi": "0x00000001",
                    "eax": "0x00023370",
                    "ebx": "0x00000000",
                    "ecx": "0x011fff08",
                    "edx": "0x00450374"
                }
            }
        ],
        "dynamic_code_segments": []
    }
]