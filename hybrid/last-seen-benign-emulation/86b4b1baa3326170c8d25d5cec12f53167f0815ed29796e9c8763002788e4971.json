[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0xb41c00",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x0",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x412e50",
        "ep_args": [
            "0x4000",
            "0x4010",
            "0x4020",
            "0x4030"
        ],
        "apihash": "14b747940b7d480521c3026a8c0175be2281ce6c3c48b2c3f3e71ff31d8739e0",
        "apis": [
            {
                "pc": "0x96de0b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211ea0"
                ],
                "ret_val": null
            },
            {
                "pc": "0x96de1a",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x1bc8"
            },
            {
                "pc": "0x96de23",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x1bb4"
            },
            {
                "pc": "0x96de30",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211e98"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x412e8d",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x412e40"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x412e9a",
                "api_name": "KERNEL32.GetModuleHandleW",
                "args": [
                    "kernel32.dll"
                ],
                "ret_val": "0x77000000"
            },
            {
                "pc": "0x412eac",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x77000000",
                    "SetUnhandledExceptionFilter"
                ],
                "ret_val": "0xfeee0000"
            },
            {
                "pc": "0x412ecf",
                "api_name": "KERNEL32.GetCurrentProcess",
                "args": [],
                "ret_val": "0xffffffff"
            }
        ],
        "ret_val": "0xffffffff",
        "error": {
            "type": "Invalid memory write (UC_ERR_WRITE_UNMAPPED)",
            "pc": "0xfeedf038",
            "address": "0xfeedf038",
            "instr": "disasm_failed",
            "regs": {
                "esp": "0x01211e9c",
                "ebp": "0x01211fe8",
                "eip": "0xfeedf038",
                "esi": "0xfeedf010",
                "edi": "0xfeedf014",
                "eax": "0xffffffff",
                "ebx": "0x00000000",
                "ecx": "0x01211ec0",
                "edx": "0x00000000"
            },
            "stack": [
                "sp+0x00: 0x00412ed6 -> emu.module.86b4b1baa3326170c8d25d5cec12f53167f0815ed29796e9c8763002788e4971.0x400000",
                "sp+0x04: 0xffffffff",
                "sp+0x08: 0xfeee0000",
                "sp+0x0c: 0x00ce403c -> emu.module.86b4b1baa3326170c8d25d5cec12f53167f0815ed29796e9c8763002788e4971.0x400000",
                "sp+0x10: 0x00000005",
                "sp+0x14: 0x01211ec0 -> emu.stack.0x1200000",
                "sp+0x18: 0xba61f9a6",
                "sp+0x1c: 0x00000000",
                "sp+0x20: 0x00000000",
                "sp+0x24: 0x00000000",
                "sp+0x28: 0x00000000",
                "sp+0x2c: 0x00000000",
                "sp+0x30: 0x00000000",
                "sp+0x34: 0x00000000",
                "sp+0x38: 0x00000000",
                "sp+0x3c: 0x00000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/kernel32.py\", line 1053, in WriteProcessMemory\n    self.mem_write(lpBaseAddress, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 306, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 244, in mem_write\n    self.emu_eng.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 167, in mem_write\n    return self.emu.mem_write(addr, data)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 443, in mem_write\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory write (UC_ERR_WRITE_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]