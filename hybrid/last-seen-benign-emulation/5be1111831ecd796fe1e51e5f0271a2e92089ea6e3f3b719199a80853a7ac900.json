[
    {
        "ep_type": "tls_callback_0",
        "start_addr": "0x412a10",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "12a71e17890b2d0279b5e67591e74e3f3f63f6b6434f76d3a8a7e14cf0c9b1f0",
        "apis": [
            {
                "pc": "0x4137ad",
                "api_name": "KERNEL32.InitializeCriticalSection",
                "args": [
                    "0x427b00"
                ],
                "ret_val": null
            }
        ],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "tls_callback_1",
        "start_addr": "0x4129e0",
        "ep_args": [
            "0x400000",
            "0x1",
            "0x0"
        ],
        "apihash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "apis": [],
        "ret_val": "0x1",
        "error": {},
        "dynamic_code_segments": []
    },
    {
        "ep_type": "module_entry",
        "start_addr": "0x4014d0",
        "ep_args": [
            "0x4030",
            "0x4040",
            "0x4050",
            "0x4060"
        ],
        "apihash": "1aa657c709cf21495666cc304500d4bf1309dbbb041250b2540feca7cbd5688c",
        "apis": [
            {
                "pc": "0x41284b",
                "api_name": "KERNEL32.GetSystemTimeAsFileTime",
                "args": [
                    "0x1211f38"
                ],
                "ret_val": null
            },
            {
                "pc": "0x412856",
                "api_name": "KERNEL32.GetCurrentProcessId",
                "args": [],
                "ret_val": "0x10d94"
            },
            {
                "pc": "0x41285f",
                "api_name": "KERNEL32.GetCurrentThreadId",
                "args": [],
                "ret_val": "0x10da8"
            },
            {
                "pc": "0x412867",
                "api_name": "KERNEL32.GetTickCount",
                "args": [],
                "ret_val": "0x5265c14"
            },
            {
                "pc": "0x412874",
                "api_name": "KERNEL32.QueryPerformanceCounter",
                "args": [
                    "0x1211f48"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x401499",
                "api_name": "KERNEL32.GetStartupInfoA",
                "args": [
                    "0x1211ed8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x4014b9",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x42a018",
                    "0x42a030"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401470",
                "api_name": "msvcrt._initterm",
                "args": [
                    "0x42a000",
                    "0x42a010"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401289",
                "api_name": "KERNEL32.SetUnhandledExceptionFilter",
                "args": [
                    "0x413370"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x41385f",
                "api_name": "msvcrt.strlen",
                "args": [
                    ".pdata"
                ],
                "ret_val": "0x6"
            },
            {
                "pc": "0x4138c1",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".text",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4138c1",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".data",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4138c1",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".rdata",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x4138c1",
                "api_name": "msvcrt.strncmp",
                "args": [
                    ".pdata",
                    ".pdata",
                    "0x8"
                ],
                "ret_val": "0x0"
            },
            {
                "pc": "0x401363",
                "api_name": "msvcrt.malloc",
                "args": [
                    "0x8"
                ],
                "ret_val": "0x4a10"
            },
            {
                "pc": "0x412669",
                "api_name": "msvcrt._lock",
                "args": [
                    "0x8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x41269d",
                "api_name": "msvcrt.__dllonexit",
                "args": [
                    "0x4015a0",
                    "0x1211e28",
                    "0x1211e30"
                ],
                "ret_val": "0x4015a0"
            },
            {
                "pc": "0x4126cc",
                "api_name": "msvcrt._unlock",
                "args": [
                    "0x8"
                ],
                "ret_val": null
            },
            {
                "pc": "0x41269d",
                "api_name": "msvcrt.__dllonexit",
                "args": [
                    "0x412710",
                    "0x1211e68",
                    "0x1211e70"
                ],
                "ret_val": "0x412710"
            },
            {
                "pc": "0x40501a",
                "api_name": "KERNEL32.GetVersionExA",
                "args": [
                    "0x1211d98"
                ],
                "ret_val": "0x1"
            },
            {
                "pc": "0x405191",
                "api_name": "KERNEL32.LoadLibraryA",
                "args": [
                    "shell32.dll"
                ],
                "ret_val": "0x69000000"
            },
            {
                "pc": "0x4050cd",
                "api_name": "KERNEL32.GetProcAddress",
                "args": [
                    "0x69000000",
                    "Shell_NotifyIconW"
                ],
                "ret_val": "0xfeee0000"
            }
        ],
        "ret_val": "0xfeee0000",
        "error": {
            "type": "Invalid memory read (UC_ERR_READ_UNMAPPED)",
            "pc": "0xfeedf1e8",
            "address": "0xfeedf1e8",
            "instr": "disasm_failed",
            "regs": {
                "rsp": "0x0000000001211e40",
                "rbp": "0x0000000000004a10",
                "rip": "0x00000000feedf1e8",
                "rsi": "0x0000000000427b80",
                "rdi": "0x0000000000000000",
                "rax": "0x00000000feee0000",
                "rbx": "0x0000000000427b88",
                "rcx": "0x0000000000000000",
                "rdx": "0x0000000000008002",
                "r8": "0x0000000000416796",
                "r9": "0x0000000000000000",
                "r10": "0x0000000000000000",
                "r11": "0x0000000000000000",
                "r12": "0x0000000000000000",
                "r13": "0x0000000000000000",
                "r14": "0x0000000000000000",
                "r15": "0x0000000000000000"
            },
            "stack": [
                "sp+0x00: 0x0000000000413f2a -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x08: 0x0000000000427b88 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x10: 0x0000000000427b80 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x18: 0x0000000000427810 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x20: 0x00000000004132b7 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x28: 0x0000000000000000",
                "sp+0x30: 0x0000000000000000",
                "sp+0x38: 0x0000000000000000",
                "sp+0x40: 0x0000000000000000",
                "sp+0x48: 0x0000000000000000",
                "sp+0x50: 0x0000000000000000",
                "sp+0x58: 0x0000000000000000",
                "sp+0x60: 0x0000000000000000",
                "sp+0x68: 0x0000000000427b88 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x70: 0x00000000004013f8 -> emu.module.5be1111831ecd796fe1e51e5f0271a2e92089ea6e3f3b719199a80853a7ac900.0x400000",
                "sp+0x78: 0x0000000000000000"
            ],
            "traceback": "Traceback (most recent call last):\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/windows/winemu.py\", line 1169, in handle_import_func\n    rv = self.api.call_api_func(mod, func, argv, ctx=default_ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/winapi.py\", line 77, in call_api_func\n    return func(mod, self.emu, argv, ctx)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/usermode/user32.py\", line 293, in CreateWindowEx\n    cn = self.read_mem_string(cn, cw)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/winenv/api/api.py\", line 158, in read_mem_string\n    string = self.emu.read_mem_string(addr, width=width)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/binemu.py\", line 715, in read_mem_string\n    char = self.mem_read(address, width)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/memmgr.py\", line 250, in mem_read\n    return bytes(self.emu_eng.mem_read(addr, size))\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/speakeasy/engines/unicorn_eng.py\", line 171, in mem_read\n    return self.emu.mem_read(addr, size)\n  File \"/home/robin/venvs/ember-venv/lib/python3.7/site-packages/unicorn/unicorn.py\", line 436, in mem_read\n    raise UcError(status)\nunicorn.unicorn.UcError: Invalid memory read (UC_ERR_READ_UNMAPPED)\n"
        },
        "dynamic_code_segments": []
    }
]